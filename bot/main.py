# -*- coding: utf-8 -*-
from ast import Lambda, alias
from cgitb import text
from dis import disco
from io import BytesIO
import json
from multiprocessing import Event
from pydoc import cli, describe
from sqlite3.dbapi2 import Connection, Cursor, connect
from tabnanny import check
from turtle import color, title
from types import MemberDescriptorType
from unicodedata import name 
from unittest import async_case
from urllib import response
from xml.dom.minicompat import EmptyNodeList
import discord
from discord import client, channel, mentions, http, utils, File, FFmpegPCMAudio, Webhook
from discord.colour import Color
from discord.ext import commands
import os, sqlite3
import string
from PIL import Image, ImageDraw, ImageFont, ImageChops
import io
import asyncio
import datetime
import time as dt
from discord.ext.commands import bot as bo
from discord.ext.commands.core import command
from discord.flags import Intents
from discord.utils import get
from discord.gateway import DiscordWebSocket
import animec
import random
from youtube_dl import YoutubeDL
from asyncio import sleep
import youtube_dl
from async_timeout import timeout
from discord.ext import commands
import httpx
from bs4 import BeautifulSoup
from functools import partial
import itertools   
import numpy as np
import operator
import aiohttp
import sys
from pymongo import MongoClient
from config import settings
from tabulate import tabulate
from Cybernator import Paginator as pag
import requests
from typing import Optional
from easy_pil import Editor, load_image_async, Font
import spotdl
from math import pi, tau, e, sqrt
from TagScriptEngine import Interpreter, block
import locale
from faker import Faker
import re
import qrcode as qr 
import base64 as bas64
from sty import fg, bg, ef, rs
import threading
import akinator as Akinator
import uuid
from discord.ext.commands import cooldown, BucketType
import psutil
import traceback
from dotenv import load_dotenv
import subprocess
from pypresence import Presence

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

intents = discord.Intents.default()
intents.presences = True
intents.members = True 
intents.message_content = True

client = commands.Bot( command_prefix = settings['prefix'], intents=intents )
client.remove_command( 'help' )

#------------------------------------------------------------------------------------------------------------- 
#-------------------------------------------------------------------------------------------------------------

bot_name=settings['bot_name']
bot_version=settings['curr_version']
bot_prefix=settings['prefix']
bot_owner=settings['owner']
bot_color=discord.Color.from_rgb(settings['theme'])
bot_lang='`RU` :flag_ru:'
bot_site=settings['support_site']
bot_support=settings['support_server']
bot_add=settings['invite']
year='2022'
bot_coin=settings['coin']
date_format=settings['date_format']

—ã="—ã"
—ë="—ë"
—ä="—ä"

#------------------------------------------------------------------------------------------------------------- 
#-------------------------------------------------erorr-------------------------------------------------------

@client.event
async def on_command_error(ctx, error):
    if isinstance(error, commands.BotMissingPermissions):
        embed = discord.Embed(title="–û—à–∏–±–∫–∞: –£ –±–æ—Ç–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è", description="–£ –±–æ—Ç–∞ –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å–µ—Ä–≤–µ—Ä–∞ —á—Ç–æ –±—ã –±–æ—Ç—É –≤—ã–¥–∞–ª–∏ –ø—Ä–∞–≤–∞.", colour=discord.Color.red())
        embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed=embed, delete_after=15)
        await ctx.message.add_reaction('‚ö†')
    if isinstance(error, commands.CommandNotFound):
        embed2 = discord.Embed(title="–û—à–∏–±–∫–∞: –ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞", description="–ü—Ä–æ–≤–µ—Ä—Ç–µ –Ω–∞–ø–∏—Å–∞–ª–∏ –ª–∏ –≤—ã –∫–æ–º–∞–Ω–¥—É –ø—Ä–∞–≤–∏–ª—å–Ω–æ –∏ –µ—Å—Ç—å –ª–∏ –æ–Ω–∞ –≤ –±–æ—Ç–µ.", colour=discord.Color.red())
        embed2.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
        embed2.timestamp = datetime.datetime.utcnow()
        embed2.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed=embed2, delete_after=15)
        await ctx.message.add_reaction('‚ùå')
    if isinstance(error, commands.MissingPermissions):
        embed3 = discord.Embed(title="–û—à–∏–±–∫–∞: –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤", description="–£ –≤–∞—Å –Ω–µ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω–æ–π –∫–æ–º–∞–Ω–¥—ã.", colour=discord.Color.red())
        embed3.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
        embed3.timestamp = datetime.datetime.utcnow()
        embed3.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed=embed3, delete_after=15)
        await ctx.message.add_reaction('üö´')
    if isinstance(error, commands.NSFWChannelRequired):
        embed3 = discord.Embed(title='–û—à–∏–±–∫–∞: –¢–æ–ª—å–∫–æ –¥–ª—è —á–∞—Ç–æ–≤ "NSFW"', description='–ö–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ —á–∞—Ç–∞—Ö —Å –æ—Ç–º–µ—Ç–∫–æ–π "NSFW".', colour=discord.Color.red())
        embed3.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
        embed3.timestamp = datetime.datetime.utcnow()
        embed3.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed=embed3, delete_after=15)
        await ctx.message.add_reaction('üîû')

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.event
async def on_guild_join(guild):
    if guild.system_channel is not None:
        embed = discord.Embed(title='–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!', description=f'**–ü—Ä–∏–≤–µ—Ç! –Ø {bot_name} –±–æ—Ç –¥–ª—è —Ç–≤–æ–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞!**\n\n–ù–µ –º–Ω–æ–≥–æ –æ —Å–µ–±–µ:\n-–ú–æ–π –ø—Ä–µ—Ñ–∏–∫—Å: `{bot_prefix}`\n-–ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å: `{bot_owner}`\n-–ú–æ–π —è–∑—ã–∫: {bot_lang}\n-–Ø–∑—ã–∫ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —è –Ω–∞–ø–∏—Å–∞–Ω: `Python`\n-–ú–æ—è –≤–µ—Ä—Å–∏—è: `{bot_version}`', color=bot_color)
        embed.set_thumbnail(url=client.user.avatar.url)
        embed_link = discord.Embed(title='–°–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏!', description=f'–°–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏ {bot_name} –≤ Discord\n[{bot_name} Bot | Support]({bot_support})', color=discord.Color.from_rgb(86,97,246))
        embed_link.set_thumbnail(url="https://play-lh.googleusercontent.com/Wvjx6rVlC1rGWKkln3r-23ICKV--sxEEUuq7jd15BeJan8v-wS7TGwm0NHXqqon18w")
        await guild.system_channel.send(embed=embed)
        await guild.system_channel.send(embed=embed_link)
    elif guild.system_channel is None:
        user = client.get_user(guild.owner.id)
        embed = discord.Embed(title='–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é!', description=f'**–ü—Ä–∏–≤–µ—Ç! –Ø {bot_name} –±–æ—Ç –¥–ª—è —Ç–≤–æ–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞!**\n\n–ù–µ –º–Ω–æ–≥–æ –æ —Å–µ–±–µ:\n-–ú–æ–π –ø—Ä–µ—Ñ–∏–∫—Å: `{bot_prefix}`\n-–ú–æ–π —Å–æ–∑–¥–∞—Ç–µ–ª—å: `{bot_owner}`\n-–ú–æ–π —è–∑—ã–∫: {bot_lang}\n-–Ø–∑—ã–∫ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —è –Ω–∞–ø–∏—Å–∞–Ω: `Python`\n-–ú–æ—è –≤–µ—Ä—Å–∏—è: `{bot_version}`', color=bot_color)
        embed.set_thumbnail(url=client.user.avatar.url)
        embed_link = discord.Embed(title='–°–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏!', description=f'–°–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏ {bot_name} –≤ Discord\n[{bot_name} Bot | Support]({bot_support})', color=discord.Color.from_rgb(86,97,246))
        embed_link.set_thumbnail(url="https://play-lh.googleusercontent.com/Wvjx6rVlC1rGWKkln3r-23ICKV--sxEEUuq7jd15BeJan8v-wS7TGwm0NHXqqon18w")
        await user.send(embed=embed)
        await user.send(embed=embed_link)

#-------------------------------------------------------------------------------------------------------------
#-----------------------------------------–ø–æ—Å–ª–µ–¥–Ω–∏–µ-–Ω–æ–≤–æ—Å—Ç–∏-–±–æ—Ç–∞----------------------------------------------

@client.command()
async def news(ctx):
    embed = discord.Embed(title=f"–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ {bot_name}", description="–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π Mayuko\n\n**:mailbox_with_mail: –ù–æ–≤–æ—Å—Ç–∏**\n", color=bot_color)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed)
  
#-------------------------------------------------------------------------------------------------------------
#-----------------------------------------------–ø—Ä–∏–≥–ª–æ—Å–∏—Ç—å-–±–æ—Ç–∞-----------------------------------------------

@client.command()
async def invite(ctx):
    embed = discord.Embed(title=f"–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å {bot_name} –Ω–∞ —Å–≤–æ–π —Å–µ—Ä–≤–µ—Ä", description=f"–ù–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ —á—Ç–æ –±—ã –¥–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –Ω–∞ —Å–≤–æ–π —Å–µ—Ä–≤–µ—Ä.", color  = bot_color)
    view = discord.ui.View()
    button = discord.ui.Button(style=discord.ButtonStyle.grey, label="–î–æ–±–∞–≤—å –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä", url=bot_add, emoji="<:icon_link:969231366329864192>")
    view.add_item(item=button)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed, view=view)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------–∏–Ω—Ñ–æ--------------------------------------------------------

@client.group(invoke_without_command = True, aliases=["information"])
async def info(ctx):
    await ctx.message.reply(f"{ctx.author.name}, —Ç–∏–ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ —É–∫–∞–∑–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–∑–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –ø–æ–º–æ—â–∏ (`{bot_prefix}help info`)")

#----------------------------------------------–∏–Ω—Ñ–æ-–æ-–±–æ—Ç–µ----------------------------------------------------

@info.command()
async def bot(ctx: commands.Context):
    #battery = psutil.sensors_battery()
    #percentbat = int(battery.percent)
    cpu = psutil.cpu_percent()
    mem = psutil.virtual_memory()
    percentmem = int(mem.percent)

    embed = discord.Embed(
        color = bot_color,
        title=f"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {bot_name}",
        description=f"–ü–æ—Å–ª–µ–¥–Ω—è—è –∞–∫—Ç—É–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {bot_name} –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –Ω–∏–∂–µ",
        )
    embed.add_field(name="–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:", value=f"–°–æ–∑–¥–∞—Ç–µ–ª—å:\n`{bot_owner}`\n –í–µ—Ä—Å–∏—è: `{bot_version}`\n–Ø–ü: `Python`")
    embed.add_field(name="–°–∏—Å—Ç–µ–º–∞:", value=f"–ü–∏–Ω–≥: `{round (client.latency * 1000)}` ms\n –°–∏—Å—Ç–µ–º–∞:\n`Windows 10`\nCPU: `{cpu}%`\n –ü–∞–º—è—Ç—å: `{percentmem}%`")
    embed.add_field(name="–°—Ç–∞—Ç–∏—Å–∫—Ç–∏–∫–∞:", value="–°–µ—Ä–≤–µ—Ä–æ–≤: `"+ str(len(client.guilds))+"`\n –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n`"+ str(len(client.users)) +"`")
    #embed.add_field(name="–°–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏:", value=f"[–°–µ—Ä–≤–µ—Ä –ø–æ–¥–¥–µ—Ä–∂–∫–∏]({bot_support})")
    #embed.add_field(name="–î–æ–±–∞–≤—å –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä:", value=f"[–î–æ–±–∞–≤—å –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä]({bot_add})")
    embed.set_thumbnail(url = client.user.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed)

#---------------------------------------------–∏–Ω—Ñ–æ-–æ-—Å–µ—Ä–≤–µ—Ä–µ--------------------------------------------------
    
@info.command()
@commands.guild_only()
async def server(ctx):
    locale.setlocale(locale.LC_ALL, 'ru_RU')
    name = str(ctx.guild.name)
    description = str(ctx.guild.description)

    owner = str(ctx.guild.owner)
    #create_time = (ctx.guild.created_at.strftime(date_format))
    epoch_created_at = int(dt.mktime(ctx.guild.created_at.timetuple()))
    id = str(ctx.guild.id)
    #region = str(ctx.guild_region)
    memberCount = str(ctx.guild.member_count)

    textCount = len(ctx.guild.text_channels)
    voiceCount = len(ctx.guild.voice_channels)
    channelsCount = len(ctx.guild.text_channels + ctx.guild.voice_channels)

    icon = str(ctx.guild.icon.url)

    embed = discord.Embed(
        title=name,
        description=description,
        color=bot_color
    )
    embed.set_thumbnail(url=icon)
    embed.add_field(name="–°–æ–∑–¥–∞—Ç–µ–ª—å:", value=owner, inline=True)
    embed.add_field(name="–°–æ–∑–¥–∞–Ω:", value=f"<t:{epoch_created_at}>(<t:{epoch_created_at}:R>)", inline=True)
    embed.add_field(name="ID —Å–µ—Ä–≤–µ—Ä–∞:", value=id, inline=True)
    #embed.add_field(name="–†–µ–≥–∏–æ–Ω —Å–µ—Ä–≤–µ—Ä–∞:", value=region, inline=True)
    embed.add_field(name="–£–∞—Å—Ç–Ω–∏–∫–æ–≤:", value=memberCount, inline=True)
    embed.add_field(name="–¢–µ–∫—Å—Ç–æ–≤—ã—Ö —á–∞—Ç–æ–≤:", value=textCount, inline=True)
    embed.add_field(name="–ì–æ–ª–æ—Å–æ–≤—ã—Ö —á–∞—Ç–æ–≤:", value=voiceCount, inline=True)
    embed.add_field(name="–í—Å–µ–≥–æ —á–∞—Ç–æ–≤:", value=channelsCount, inline=True)
    if ctx.guild.banner:
        embed.add_image(url=ctx.guild.banner.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed)

#--------------------------------------–∏–Ω—Ñ–æ-–æ-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ--------------------------------------------------
    
@info.command()
async def user(ctx, *, user: discord.Member = None): # b'\xfc'
    if user is None:
        user = ctx.author      
    locale.setlocale(locale.LC_ALL, 'ru_RU')
    embed = discord.Embed(color=bot_color)
    embed.set_thumbnail(url=user.avatar.url)#name=str(user),
    t = user.status
    if t == discord.Status.online:
        d = "<:status_online:973547805069180948> –í —Å–µ—Ç–∏"

    t = user.status
    if t == discord.Status.offline:
        d = "<:status_offline:973548082111336458> –ù–µ –≤ —Å–µ—Ç–∏"

    t = user.status
    if t == discord.Status.idle:
        d = "<:status_idle:973547681337184356> –ù–µ –∞–∫—Ç–∏–≤–µ–Ω"

    t = user.status
    if t == discord.Status.dnd:
        d = "<:status_dnd:973547976142258237>  –ù–µ –±–µ—Å–ø–æ–∫–æ–∏—Ç—å"
    embed.add_field(name="–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å:", value=d)
    embed.add_field(name="–°—Ç–∞—Ç—É—Å:", value=user.activity)
    members = sorted(ctx.guild.members, key=lambda m: m.joined_at)
    embed.add_field(name="–ü–æ–∑–∏—Ü–∏—è", value=str(members.index(user)+1))
    epoch_joined_at = int(dt.mktime(user.joined_at.timetuple()))
    epoch_created_at = int(dt.mktime(user.created_at.timetuple()))
    embed.add_field(name="–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è", value=f"<t:{epoch_joined_at}>(<t:{epoch_joined_at}:R>)")
    embed.add_field(name="–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω", value=f"<t:{epoch_created_at}>(<t:{epoch_created_at}:R>)")
    if len(user.roles) > 1:
        role_string = ' '.join([r.mention for r in user.roles][1:])
        embed.add_field(name="–†–æ–ª–∏ [{}]".format(len(user.roles)-1), value=role_string, inline=False)
    perm_string = ', '.join([str(p[0]).replace("_", " ").title() for p in user.guild_permissions if p[1]])
    embed.add_field(name="–†–∞–∑—Ä–µ—à–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ", value=perm_string, inline=False)
    #embed.set_image(user.banner_url)
    embed.timestamp = datetime.datetime.utcnow()
    if user.banner:
        member = await client.fetch_user(user.id)
        banner_url = member.banner.url
        embed.set_image(url=banner_url)
    embed.set_footer(text='ID: ' + str(user.id) + f'\n\n{ctx.author.name} \u200b')
    return await ctx.reply(embed=embed)

#-------------------------------------------------------------------------------------------------------------
#----------------------------------------–¥–æ–±–∞–≤–∏—Ç—å-–±–æ—Ç–∞-–Ω–∞-—Å–µ—Ä–≤–µ—Ä----------------------------------------------

@client.command()
async def addbot(ctx):
  embed = discord.Embed(
        color = bot_color,
        title="–î–æ–±–∞–≤—å –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä!",
        description=f"\n\n[–î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä]({bot_add}) ",
        )
  embed.set_thumbnail(url = client.user.avatar.url)
  embed.set_footer(text = f'{bot_owner} ¬© {year} –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã')
  await ctx.reply(embed=embed)

#-------------------------------------------------------------------------------------------------------------
#----------------------------------------------–Ω–µ–∫–¥–æ—Ç---------------------------------------------------------

@client.command()
async def joke(ctx):
  embed = discord.Embed(
        color = 0xff9900,
        title="–ö–æ–º–∞–Ω–¥—ã –¥–ª—è **–∞–Ω–µ–∫–¥–æ—Ç–æ–≤**",
        description="**<:smile:920714719873105951> –ê–Ω–µ–∫–¥–æ—Ç—ã**\n`m!buckwheat_and_cat` - –ì—Ä–µ—á–∫–∞ –∏ –∫–æ—à–∫–∞\n`m!ment_and_man` - –ú–µ–Ω—Ç –∏ –º—É–∂–∏–∫",
        )
  embed.set_thumbnail(url = client.user.avatar.url)
  embed.set_footer(text = f'{bot_owner} ¬© {year} –í—Å–µ –ø—Ä–∞–≤–∞ –∑–∞—â–∏—â–µ–Ω—ã')
  embinf = discord.Embed(title='`–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–∞–Ω–¥–µ m!info`', description='**–û–ø–∏—Å–∞–Ω–∏–µ:**\n–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–∞–Ω–Ω–æ–º –±–æ—Ç–µ', color=0xff9900)
  embinf.set_thumbnail(url = client.user.avatar.url)
  await ctx.reply(embed=embed)

@client.command(pass_context=True)#–ì—Ä–µ—á–∫–∞ –∏ –∫–æ—à–∫–∞
async def buckwheat_and_cat(ctx):
    embed=discord.Embed(title='–ê–Ω–µ–∫–¥–æ—Ç: –ì—Ä–µ—á–∫–∞ –∏ –∫–æ—à–∫–∞', description='**–ö–æ—à–∫–µ –ø—Ä–∏–Ω–æ—Å—è—Ç –∫—É—à–∞—Ç—å. \n –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫. \n - –í–∞—É!!!!!!!!!!!!!!!!!!!! –ì–†–ï–ß–ö–ê–ê–ê–ê–ê!!!!!!!!!!!!!! \n –í—Ç–æ—Ä–Ω–∏–∫. \n -–í–∞—É! –ì—Ä–µ—á–∫–∞. \n –°—Ä–µ–¥–∞. \n - –ú–¥–∞, –≥—Ä–µ—á–∫–∞ \n –ß–µ—Ç–≤–µ—Ä–≥. \n -–≥—Ä–µ—á–∫–∞? \n –ü—è—Ç–Ω–∏—Ü–∞. \n -–æ–ø—è—Ç—å –≥—Ä–µ—á–∫–∞ \n –°—É–±–±–æ—Ç–∞. \n –ú–∏—Å–∫–∞ –ø—É—Å—Ç–∞—è \n –í–æ—Å–∫—Ä–µ—Å–µ–Ω–∏–µ. \n –ú–∏—Å–∫–∞ –ø—É—Å—Ç–∞—è \n –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫. \n - –í–∞—É!!!!!!!!!!!!!!!!!!!! –ì–†–ï–ß–ö–ê–ê–ê–ê–ê!!!!!!!!!!!!!!**', colour = discord.Color.from_rgb(240, 140, 149))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    await ctx.send(embed = embed)

@client.command(pass_context=True)#–ú–µ–Ω—Ç –∏ –º—É–∂–∏–∫
async def ment_and_man(ctx):
    embed=discord.Embed(title='–ê–Ω–µ–∫–¥–æ—Ç: –ú–µ–Ω—Ç –∏ –º—É–∂–∏–∫', description='**–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –º–µ–Ω—Ç –∫–∞–∫–æ–≥–æ-—Ç–æ –º—É–∂–∏–∫–∞. –¢–æ—Ç –≥–æ–≤–æ—Ä–∏—Ç: \n - –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—É—Å—Ç–∏—Ç–µ –º–µ–Ω—è, —è –Ω–∞ —Ä–∞–±–æ—Ç—É –æ–ø–∞–∑–¥—ã–≤–∞—é. \n - –ê –∫–µ–º –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ? \n - –Ø –º–µ—Ç–∞—Ç–µ–ª—å –Ω–æ–∂–µ–π –≤ —Ü–∏—Ä–∫–µ. \n - –ù–µ –≤–µ—Ä—é, –¥–æ–∫–∞–∂–∏—Ç–µ. \n –¢–æ—Ç –¥–æ—Å—Ç–∞–µ—Ç –¥–µ—Å—è—Ç–æ–∫ –Ω–æ–∂–µ–π –Ω–∞—á–∏–Ω–∞–µ—Ç –∂–æ–Ω–≥–ª–∏—Ä–æ–≤–∞—Ç—å. \n –ú–∏–º–æ –ø—Ä–æ–µ–∑–∂–∞–µ—Ç –º–∞—à–∏–Ω–∞ —Å —Å—É–ø—Ä—É–∂–µ—Å–∫–æ–π –ø–∞—Ä–æ–π. –ú—É–∂ –≥–æ–≤–æ—Ä–∏—Ç –∂–µ–Ω–µ: \n - –•–æ—Ä–æ—à–æ, —á—Ç–æ —è –ø–∏—Ç—å –±—Ä–æ—Å–∏–ª. –í–∏–¥–µ–ª–∞, –∫–∞–∫–∏–µ —Ç–µ–ø–µ—Ä—å —Ç–µ—Å—Ç—ã –ø–æ—à–ª–∏? **', colour = discord.Color.from_rgb(240, 140, 149))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    await ctx.send(embed = embed)

@client.command(pass_context=True)
async def lwalpdad(ctx):
    embed=discord.Embed(title='–ê–Ω–µ–∫–¥–æ—Ç: –ì—Ä–µ—á–∫–∞', description='**! **', colour = discord.Color.from_rgb(240, 140, 149))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    await ctx.send(embed = embed)

@client.command(pass_context=True)
async def asdadsadt(ctx):
    embed=discord.Embed(title='–ê–Ω–µ–∫–¥–æ—Ç: –ì—Ä–µ—á–∫–∞', description='**! **', colour = discord.Color.from_rgb(240, 140, 149))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    await ctx.send(embed = embed)


#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.command(aliases=["–≥–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ"])
async def voting(ctx, *, arg = None):
    if arg is None:
        await ctx.send('–£–∫–∞–∂–∏—Ç–µ —Ç–µ–∫—Å—Ç')
    else:
        msg = await ctx.send(embed = discord.Embed(title = f'–ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ', description = f'–ì–æ–ª–æ—Å—É–π—Ç–µ –ø–æ —Ä–µ–∞–∫—Ü–∏—è–º! \n> {arg}', color=bot_color))
        await ctx.message.delete()
        await msg.add_reaction('üëç') 
        await msg.add_reaction('üëé')

#-------------------------------------------------------------------------------------------------------------
#--------------------------------------–∏–∑–º–∏–Ω–µ–Ω–∏–µ-–Ω–∏–∫–∞---------------------------------------------------------

@client.command()
# –ø—Ä–æ–≤–µ—Ä—å—Ç–µ, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ —Å–≤–æ–µ–≥–æ –∏–º–µ–Ω–∏
@commands.has_permissions(change_nickname=True)
async def nick(ctx, member: discord.Member, *, nickname):
    await member.edit(nick=nickname)
    await ctx.send(f'–ù–∏–∫ –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω –Ω–∞ {member.mention}.')

# —Å–±—Ä–æ—Å–∏—Ç—å –Ω–∏–∫–Ω–µ–π–º, –µ—Å–ª–∏ –Ω–æ–≤–æ–µ –∏–º—è –Ω–µ –±—ã–ª–æ –¥–∞–Ω–æ
@nick.error
async def nick_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        member = ctx.author
        await member.edit(nick=None)
        await ctx.send(f'–ù–∏–∫–Ω–µ–π–º –±—ã–ª —Å–±—Ä–æ—à–µ–Ω –Ω–∞ {member.mention}.')

#-------------------------------------------------------------------------------------------------------------
#---------------------------------------------–æ–Ω–ª–∞–π–Ω----------------------------------------------------------

@client.command()
async def online(ctx):
    embed = discord.Embed( title = '–í—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —É—Å–ø–µ—à–Ω–æ!', colour = discord.Color.green() )
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')

    await ctx.send( embed = embed )

#-------------------------------------------------------------------------------------------------------------
#---------------------------------------------–≤—Ä–µ–º—è-----------------------------------------------------------

@client.command( pass_context = True )
async def  time( ctx ):
    emb = discord.Embed( title = '–í–∞—à–µ –≤—Ä–µ–º—è:', description = '–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –≤ –≤–∞—à–µ–º —Ä–µ–≥–∏–æ–Ω–µ', colour = bot_color, url = 'https://www.timeserver.ru')

    emb.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url )
    emb.set_footer( text = '–°–ø–∞—Å–∏–±–æ —á—Ç–æ –ø–æ—Å–º–æ—Ç—Ä–µ–ª–∏ –≤—Ä–µ–º—è –ø—Ä–∏ –ø–æ–º–æ—â–∏ –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞!' )
    #emb.set_image( url = 'https://sun9-35.userapi.com/c200724/v2000714757/14f24/BL06miOGVd8.jpg' )
    emb.set_thumbnail( url = 'https://sun9-35.userapi.com/c200724/v200724757/14f24/BL06miOGVd8.jpg' )

    now_date = datetime.datetime.now()
    emb.add_field( name = '–í—Ä–µ–º—è', value = '–í—Ä–µ–º—è: {}'.format( now_date )) 

    await ctx.message.delete()
    await ctx.send( embed = emb )

#-------------------------------------------------------------------------------------------------------------
#------------------------------------—Å–∫–∞–∑–∞—Ç—å-–æ—Ç-–∏–º–µ–Ω–∏-–±–æ—Ç–∞----------------------------------------------------

@client.command()
async def say(ctx, *, message):
    await ctx.message.delete()
    try:
        await ctx.send(message)
    except:
        await ctx.send("–í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!")

@client.command()
async def embsay(ctx, *, message):#, color, gif
  await ctx.message.delete()
  embed = discord.Embed(description=message, colour = bot_color)#0x8A2BE2 !embsay werewr 0x8A2BE2 https://images-ext-1.discordapp.net/external/GYuNEswE3mP8mofMPeVg5wrKjQChZR43QBhAwh3cE5A/https/media.discordapp.net/attachments/867815327323783208/937442969806573638/36ce7f19e23442e11fc70ee146f614fc.gif
  await ctx.send(embed=embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------–¥–∞----------------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∫—É—Ä–∏—Ç—å
async def true(ctx):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: –ø—Ä–∏–Ω—è—Ç', colour = discord.Color.green())
    true=['https://c.tenor.com/uxokb6B56XMAAAAd/papers-please.gif']
    embed.set_image(url=random.choice(true))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#------------------------------------------–Ω–µ—Ç----------------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∫—É—Ä–∏—Ç—å
async def false(ctx):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: –æ—Ç–∫–∞–∑', colour = discord.Color.red())
    false=['https://c.tenor.com/cxZ2dpPz1k0AAAAC/papers-please.gif']
    embed.set_image(url=random.choice(false))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#-----------------------------------------–∞–≤–∞—Ç–∞—Ä–∫–∞------------------------------------------------------------

@client.group(invoke_without_command = True, aliases=["picture"])
async def avatar(ctx):
    await ctx.message.reply(f"{ctx.author.name}, —Ç–∏–ø –∞–≤–∞—Ç–∞—Ä–∫–∏ –Ω–µ —É–∫–∞–∑–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–∑–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –ø–æ–º–æ—â–∏ (`{bot_prefix}help avatar`)")
    
@avatar.command(pass_context=True, aliases=['—é—Å–µ—Ä'])
async def user(ctx, *, member: discord.Member = None):
    if not member:
        member = ctx.message.author
    embed = discord.Embed(title= '–ê–≤–∞—Ç–∞—Ä–∫–∞ '+str(member), colour = bot_color)
    embed.set_image(url=member.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.send(embed=embed)

@avatar.command(pass_context=True, aliases=['—Å–µ—Ä–≤–µ—Ä–∞', '—Å–µ—Ä–≤–µ—Ä'])
async def server(ctx):
    embed = discord.Embed(title='–ê–≤–∞—Ç–∞—Ä–∫–∞ ', colour = bot_color)
    embed.set_image(url=ctx.guild.icon.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.send(embed=embed)

@avatar.command(pass_context=True, aliases=['–±–æ—Ç'])
async def bot(ctx):
    embed = discord.Embed(title=f'–ê–≤–∞—Ç–∞—Ä–∫–∞ {bot_name}', colour = bot_color)
    embed.set_image(url=client.user.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.send(embed=embed)

#-------------------------------------------------------------------------------------------------------------
#------------------------------------–ö–æ–º–∞–Ω–¥—ã-–º–æ–¥–µ—Ä–∞—Ü–∏—è--------------------------------------------------------

# kick
@client.command(aliases=['–∫–∏–∫'])
@commands.has_permissions(kick_members = True)
async def kick(ctx, member: discord.Member, *, reason):
    await ctx.channel.purge(limit = 1)
    
    embed = discord.Embed(title = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∫–∏–∫–Ω—É—Ç!', color = 0x9400D3, colour = discord.Color.red() )
    embed.add_field(name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä / –∞–¥–º–∏–Ω:', value = ctx.message.author.mention, inline = False)
    embed.add_field(name = '–ù–∞—Ä—É—à–∏—Ç–µ–ª—å:', value = member.mention, inline = False)
    embed.add_field(name= '–ü—Ä–∏—á–∏–Ω–∞:', value = reason, inline = False)
    embed.set_thumbnail(url = 'https://c.tenor.com/ZblfUV4T1y0AAAAd/press-f-f-discord.gif')
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.send(embed = embed)
    await member.send(f'–í—ã –∫–∏–∫–Ω—É—Ç—ã –ø–æ –ø—Ä–∏—á–∏–Ω–µ "{reason}"!')
    await member.kick( reason = reason)
    #await ctx.send(f'–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ä—É—à–∏–ª –ø—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω {member.mention }.')

@kick.error
async def clear_errorqw(ctx, error):

    if isinstance(error, commands.MissingPermissions):
        embed = discord.Embed(title = '–û—à–∏–±–∫–∞!', color =0xff060e, colour = discord.Color.red() )
        embed.add_field(name = '–ü—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏:', value = '–£ –≤–∞—Å –Ω–µ—Ç—É –Ω—É–∂–Ω—ã—Ö –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π!', inline = False)
        embed.set_image(url = 'https://c.tenor.com/ZblfUV4T1y0AAAAd/press-f-f-discord.gif')
        embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.send(embed = embed)

    if isinstance(error, commands.errors.MemberNotFound):
        embed = discord.Embed(title = '–û—à–∏–±–∫–∞!', color =0xff060e, colour = discord.Color.red() )
        embed.add_field(name = '–ü—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏:', value = '–ù–µ —É–∫–∞–∑–∞–Ω–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', inline = False)
        embed.add_field(name = '–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã:', value = 'm!kick @user –ø—Ä–∏—á–∏–Ω–∞', inline = False)
        embed.set_image(url = 'https://c.tenor.com/ZblfUV4T1y0AAAAd/press-f-f-discord.gif')
        embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.send(embed = embed)

    if isinstance(error, commands.errors.MissingRequiredArgument):
        embed = discord.Embed(title = '–û—à–∏–±–∫–∞!', color =0xff060e, colour = discord.Color.red() )
        embed.add_field(name = '–ü—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏:', value = '–ù–µ —É–∫–∞–∑–∞–Ω–∞ –ø—Ä–∏—á–∏–Ω–∞', inline = False)
        embed.add_field(name = '–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã:', value = 'm!kick @user –ø—Ä–∏—á–∏–Ω–∞', inline = False)
        embed.set_image(url = 'https://c.tenor.com/ZblfUV4T1y0AAAAd/press-f-f-discord.gif')
        embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.send(embed = embed)


# Ban
@client.command(aliases=['–±–∞–Ω'])
@commands.has_permissions(ban_members = True)
async def ban(ctx, member: discord.Member, *, reason):
    await ctx.channel.purge(limit = 1)
    
    embed = discord.Embed(title = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–±–∞–Ω–µ–Ω!', color = 0x9400D3, colour = discord.Color.red() )
    embed.add_field(name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä / –∞–¥–º–∏–Ω:', value = ctx.message.author.mention, inline = False)
    embed.add_field(name = '–ù–∞—Ä—É—à–∏—Ç–µ–ª—å:', value = member.mention, inline = False)
    embed.add_field(name= '–ü—Ä–∏—á–∏–Ω–∞:', value = reason, inline = False)
    embed.set_thumbnail(url = 'https://c.tenor.com/TbfChfHKkOUAAAAM/ban-button.gif')
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.send(embed = embed)
    await member.send(f'–í—ã –∑–∞–±–∞–Ω–µ–Ω—ã –ø–æ –ø—Ä–∏—á–∏–Ω–µ "{reason}"!')
    await member.ban( reason = reason)
    #await ctx.send(f'–î–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞—Ä—É—à–∏–ª –ø—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∏ –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω {member.mention }.')

@ban.error
async def clear_errorqw(ctx, error):

    if isinstance(error, commands.MissingPermissions):
        embed = discord.Embed(title = '–û—à–∏–±–∫–∞!', color =0xff060e, colour = discord.Color.red() )
        embed.add_field(name = '–ü—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏:', value = '–£ –≤–∞—Å –Ω–µ—Ç—É –Ω—É–∂–Ω—ã—Ö –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π!', inline = False)
        embed.set_image(url = 'https://c.tenor.com/TbfChfHKkOUAAAAM/ban-button.gif')
        embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.send(embed = embed)

    if isinstance(error, commands.errors.MemberNotFound):
        embed = discord.Embed(title = '–û—à–∏–±–∫–∞!', color =0xff060e, colour = discord.Color.red() )
        embed.add_field(name = '–ü—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏:', value = '–ù–µ —É–∫–∞–∑–∞–Ω–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', inline = False)
        embed.add_field(name = '–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã:', value = f'{bot_prefix}ban @user –ø—Ä–∏—á–∏–Ω–∞', inline = False)
        embed.set_image(url = 'https://c.tenor.com/TbfChfHKkOUAAAAM/ban-button.gif')
        embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.send(embed = embed)

    if isinstance(error, commands.errors.MissingRequiredArgument):
        embed = discord.Embed(title = '–û—à–∏–±–∫–∞!', color =0xff060e, colour = discord.Color.red() )
        embed.add_field(name = '–ü—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏:', value = '–ù–µ —É–∫–∞–∑–∞–Ω–∞ –ø—Ä–∏—á–∏–Ω–∞', inline = False)
        embed.add_field(name = '–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã:', value = f'{bot_prefix}ban @user –ø—Ä–∏—á–∏–Ω–∞', inline = False)
        embed.set_image(url = 'https://c.tenor.com/TbfChfHKkOUAAAAM/ban-button.gif')
        embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.send(embed = embed)

@client.command(aliases=['—Ä–∞–∑–±–∞–Ω']) 
async def unban(ctx, *, member): 
    banned_users = await ctx.guild.bans() 
    member_name, member_discriminator = member.split('#') 
    for ban_entry in banned_users: user = ban_entry.user 
    if (user.name, user.discriminator) == (member_name, member_discriminator): 
        await ctx.guild.unban(user) 
        await ctx.channel.send(f"Unbanned: {user.mention}")

@unban.error
async def clear_errorqw(ctx, error):

    if isinstance(error, commands.MissingPermissions):
        embed = discord.Embed(title = '–û—à–∏–±–∫–∞!', color =0xff060e, colour = discord.Color.red() )
        embed.add_field(name = '–ü—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏:', value = '–£ –≤–∞—Å –Ω–µ—Ç—É –Ω—É–∂–Ω—ã—Ö –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π!', inline = False)
        embed.set_image(url = 'https://c.tenor.com/TbfChfHKkOUAAAAM/ban-button.gif')
        embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.send(embed = embed)

    if isinstance(error, commands.errors.MemberNotFound):
        embed = discord.Embed(title = '–û—à–∏–±–∫–∞!', color =0xff060e, colour = discord.Color.red() )
        embed.add_field(name = '–ü—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏:', value = '–ù–µ —É–∫–∞–∑–∞–Ω–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', inline = False)
        embed.add_field(name = '–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã:', value = f'{bot_prefix}unban @user', inline = False)
        embed.set_image(url = 'https://c.tenor.com/TbfChfHKkOUAAAAM/ban-button.gif')
        embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.send(embed = embed)

async def timeout_user(*, user_id: int, guild_id: int, until):
    headers = {"Authorization": f"Bot {client.http.token}"}
    url = f"https://discord.com/api/v9/guilds/{guild_id}/members/{user_id}"
    timeout = (datetime.datetime.utcnow() + datetime.timedelta(minutes=until)).isoformat()
    json = {'communication_disabled_until': timeout}
    async with client.session.patch(url, json=json, headers=headers) as session:
        if session.status in range(200, 299):
           return True
        return False

@client.command(aliases=['–º—É—Ç'])
@commands.has_permissions(administrator = True)
async def mute( ctx, member: discord.Member, until: int):
    await ctx.channel.purge( limit = 1 )

    handshake = await timeout_user(user_id=member.id, guild_id=ctx.guild.id, until=until)
    if handshake:

   # await member.add_roles( mute_role )
        embed = discord.Embed(title = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –º—É—Ç–µ!', color = 0x9400D3, colour = discord.Color.red() )
        embed.add_field(name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä / –∞–¥–º–∏–Ω:', value = ctx.message.author.mention, inline = False)
        embed.add_field(name = '–ó–∞–º—É—á–µ–Ω:', value = member.mention, inline = False)
        embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        return await ctx.send(embed=embed)

@mute.error
async def clear_errorqw(ctx, error):

    if isinstance(error, commands.MissingPermissions):
        embed = discord.Embed(title = '–û—à–∏–±–∫–∞!', color =0xff060e, colour = discord.Color.red() )
        embed.add_field(name = '–ü—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏:', value = '–£ –≤–∞—Å –Ω–µ—Ç—É –Ω—É–∂–Ω—ã—Ö –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π!', inline = False)
        embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.send(embed = embed)

    if isinstance(error, commands.errors.MemberNotFound):
        embed = discord.Embed(title = '–û—à–∏–±–∫–∞!', color =0xff060e, colour = discord.Color.red() )
        embed.add_field(name = '–ü—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏:', value = '–ù–µ —É–∫–∞–∑–∞–Ω–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', inline = False)
        embed.add_field(name = '–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã:', value = f'{bot_prefix}mute @user –ø—Ä–∏—á–∏–Ω–∞', inline = False)
        embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.send(embed = embed)

    if isinstance(error, commands.errors.MissingRequiredArgument):
        embed = discord.Embed(title = '–û—à–∏–±–∫–∞!', color =0xff060e, colour = discord.Color.red() )
        embed.add_field(name = '–ü—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏:', value = '–ù–µ —É–∫–∞–∑–∞–Ω–∞ –ø—Ä–∏—á–∏–Ω–∞', inline = False)
        embed.add_field(name = '–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã:', value = f'{bot_prefix}mute @user –ø—Ä–∏—á–∏–Ω–∞', inline = False)
        embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.send(embed = embed)

@client.command()
@commands.has_permissions(administrator = True)
async def unmute( ctx, member: discord.Member ):
    await ctx.channel.purge( limit = 1 )

    mute_role = discord.utils.get( ctx.message.guild.roles, name = 'AC-Mute' )

    await member.remove_roles( mute_role )
    embed = discord.Embed(title = '–°–Ω—è—Ç –º—É—Ç!', color = 0x9400D3, colour = discord.Color.red() )
    embed.add_field(name = '–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä / –∞–¥–º–∏–Ω:', value = ctx.message.author.mention, inline = False)
    embed.add_field(name = '–°–Ω—è—Ç –º—É—Ç —Å:', value = member.mention, inline = False)
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await member.send(f'–ü—Ä–∏–≤–µ—Ç –∫–æ—Ç–∏–∫ —Ç—ã —Ä–∞–∑–º—É—Ç–µ–Ω :–∑')
    await ctx.send(embed = embed)

@unmute.error
async def clear_errorqw(ctx, error):

    if isinstance(error, commands.MissingPermissions):
        embed = discord.Embed(title = '–û—à–∏–±–∫–∞!', color =0xff060e, colour = discord.Color.red() )
        embed.add_field(name = '–ü—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏:', value = '–£ –≤–∞—Å –Ω–µ—Ç—É –Ω—É–∂–Ω—ã—Ö –ø—Ä–∞–≤ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–æ–π!', inline = False)
        embed.set_image(url = 'https://c.tenor.com/TbfChfHKkOUAAAAM/ban-button.gif')
        embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.send(embed = embed)

    if isinstance(error, commands.errors.MemberNotFound):
        embed = discord.Embed(title = '–û—à–∏–±–∫–∞!', color =0xff060e, colour = discord.Color.red() )
        embed.add_field(name = '–ü—Ä–∏—á–∏–Ω–∞ –æ—à–∏–±–∫–∏:', value = '–ù–µ —É–∫–∞–∑–∞–Ω–æ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', inline = False)
        embed.add_field(name = '–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã:', value = f'{bot_prefix}unmute @user', inline = False)
        embed.set_image(url = 'https://c.tenor.com/TbfChfHKkOUAAAAM/ban-button.gif')
        embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.send(embed = embed)

@client.group(invoke_without_command = True, aliases=["clean", "purge", "nuke"])
@commands.has_permissions(manage_messages = True)
async def clear(ctx):
    await ctx.message.reply(f"{ctx.author.name}, —Ç–∏–ø –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–∑–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –ø–æ–º–æ—â–∏ (`{bot_prefix}help clear`)")

@clear.command(pass_context=True)
@commands.has_permissions(administrator=True)
async def all(ctx, limit: int):
        await ctx.channel.purge(limit=limit)
        embed = discord.Embed(title='–ö–æ–º–∞–Ω–¥–∞: –û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç :recycle:', description=f'–ë—ã–ª–æ –æ—á–∏—â–µ–Ω–æ {limit} —Å–æ–æ–±—â–µ–Ω–∏–π', colour = bot_color)
        embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url )
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.send(embed=embed)
        await ctx.message.delete()

@client.group(invoke_without_command = True, aliases=["make"])
@commands.has_permissions(manage_channels = True)
async def create(ctx):
    await ctx.message.reply(f"{ctx.author.name}, —Ç–∏–ø —á–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–∑–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –ø–æ–º–æ—â–∏ (`{bot_prefix}help create`)")

@create.command()
@commands.has_permissions(administrator = True)#
async def text(ctx, *, text_name):
    guild = ctx.guild
    await guild.create_text_channel(name=text_name)
    embed=discord.Embed(title='–ö–æ–º–∞–Ω–¥–∞: –°–æ–∑–¥–∞—Ç—å —á–∞—Ç', description='{}, —á–∞—Ç —Å–æ–∑–¥–∞–Ω!'.format(ctx.message.author.mention), color = bot_color)
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.send(embed=embed)
    await ctx.message.delete()

@create.command()
@commands.has_permissions(administrator = True)#
async def voice(ctx, *, voice_name):
    guild = ctx.guild
    await guild.create_voice_channel(name=voice_name)
    embed=discord.Embed(title='–ö–æ–º–∞–Ω–¥–∞: –°–æ–∑–¥–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π —á–∞—Ç', description='{}, –≥–æ–ª–æ—Å–æ–≤–æ–π —á–∞—Ç —Å–æ–∑–¥–∞–Ω!'.format(ctx.message.author.mention), color = bot_color)
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.send(embed=embed)
    await ctx.message.delete()

#-------------------------------------------------------------------------------------------------------------
#----------------------------------------------NSFW-----------------------------------------------------------


@client.command(pass_context=True)
async def meme(ctx):
    embed = discord.Embed(title="–†–∞–Ω–¥–æ–º–Ω—ã–π –º–µ–º:", description="", color = 0xff9900)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')

    async with aiohttp.ClientSession() as cs:
        async with cs.get('https://www.reddit.com/r/Epicentr/new.json?sort=hot') as r:
            res = await r.json()
            embed.set_image(url=res['data']['children'] [random.randint(0, 25)]['data']['url'])
            await ctx.reply(embed=embed)

#-------------------------------------—Ä–∞–Ω–¥–æ–º–Ω—ã–π-–∫–æ—Ç-----------------------------------------------------------

@client.command(pass_context=True)
async def cat(ctx):
    embed = discord.Embed(title="–†–∞–Ω–¥–æ–º–Ω—ã–π –∫–æ—Ç:", description="", color = 0xff9900)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)

    async with aiohttp.ClientSession() as cs:
        async with cs.get('https://www.reddit.com/r/cat/new.json?sort=hot') as r:
            res = await r.json()
            embed.set_image(url=res['data']['children'] [random.randint(0, 25)]['data']['url'])
            await ctx.reply(embed=embed)

#-------------------------------------—Ä–∞–Ω–¥–æ–º–Ω–∞—è-—Å–æ–±–∞–∫–∞---------------------------------------------------------

@client.command(pass_context=True)
async def dog(ctx):
    embed = discord.Embed(title="–†–∞–Ω–¥–æ–º–Ω–∞—è —Å—É—á–∫–∞:", description="", color = 0xff9900)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)

    async with aiohttp.ClientSession() as cs:
        async with cs.get('https://www.reddit.com/r/DOG/new.json?sort=hot') as r:
            res = await r.json()
            embed.set_image(url=res['data']['children'] [random.randint(0, 25)]['data']['url'])
            await ctx.reply(embed=embed)


#------------------------------------------------------------------------------------------------------------

@client.command()
async def neko(ctx):
    embed = discord.Embed(title="Neko:", description="–†–∞–Ω–¥–æ–º–Ω–∞—è –∫–æ—à–∫–∞-–¥–µ–≤–æ—á–∫–∞", color = discord.Color.from_rgb(235, 121, 106))
    async with aiohttp.ClientSession() as cs:
        async with cs.get('https://www.reddit.com/r/NekoGirl/new.json?sort=hot') as r:
            res = await r.json()
            embed.set_image(url=res['data']['children'] [random.randint(0, 25)]['data']['url'])
            embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
            embed.timestamp = datetime.datetime.utcnow()
            embed.set_footer(text=f'{ctx.author.name} \u200b')
            await ctx.reply(embed=embed)

#-------------------------------------------------------------------------------------------------------------

@client.command(aliases=['—Ç–∞–π–º–µ—Ä'], pass_context=True)
async def timer(ctx, arg):
  tim = arg
  tim = int(tim)
  update_emb = discord.Embed(title = "–¢–∞–π–º–µ—Ä", description = f"–ï—â—ë –æ—Å—Ç–∞–ª–æ—Å—å: **{tim}**", color = bot_color)
  update_emb.set_image(url="https://i.gifer.com/152H.gif")
  update_emb.timestamp = datetime.datetime.utcnow()
  update_emb.set_footer(text=f'{ctx.author.name} \u200b')
  msg = await ctx.send(embed = update_emb)
  while tim > -1:
    update_emb2 = discord.Embed(title = "–¢–∞–π–º–µ—Ä", description = f"–ï—â—ë –æ—Å—Ç–∞–ª–æ—Å—å: **{tim}**", color = discord.Color.green())
    update_emb2.set_image(url="https://i.gifer.com/152H.gif")
    update_emb2.timestamp = datetime.datetime.utcnow()
    update_emb2.set_footer(text=f'{ctx.author.name} \u200b')
    tim = tim - 1
    await msg.edit(embed=update_emb2)
    await asyncio.sleep(1)
  if tim <= 0:
    await asyncio.sleep(5)
    #await msg.delete()

#-------------------------------------------------------------------------------------------------------------

@client.command()
@commands.is_nsfw()
async def nsfw_trap(ctx):
    trap = requests.get("https://api.waifu.pics/nsfw/trap")
    embed = discord.Embed(title='–¢—Ä–∞–ø:', color=bot_color)
    embed.set_image(url=trap.json()["url"])
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed)

@client.command()
@commands.is_nsfw()
async def nsfw_neko(ctx):
    neko = requests.get("https://api.waifu.pics/nsfw/neko")
    embed = discord.Embed(title='–ù–µ–∫–æ:', color=bot_color)
    embed.set_image(url=neko.json()["url"])
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed)

@client.command()
@commands.is_nsfw()
async def nsfw_waifu(ctx):
    waifu = requests.get("https://api.waifu.pics/nsfw/waifu")
    embed = discord.Embed(title='–í–∞–π—Ñ—É:', color=bot_color)
    embed.set_image(url=waifu.json()["url"])
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed)

@client.command()
@commands.is_nsfw()
async def nsfw_blowjob(ctx):
    blowjob = requests.get("https://api.waifu.pics/nsfw/blowjob")
    embed = discord.Embed(title='–†–∞–±–æ—Ç–∞ —Ä–æ—Ç–∏–∫–æ–º:', color=bot_color)
    embed.set_image(url=blowjob.json()["url"])
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.command(aliases=['–æ—Ä—ë–ª-—Ä–µ—à–∫–∞'])
async def eagle_tails(ctx):
    await ctx.send(random.choice(['–æ—Ä–µ–ª', '—Ä–µ—à–∫–∞']))
choice = random.randint(0, 100) # —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 100
if choice < 50:
   print('')
else:
   print('')

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.command(aliases=['—à–∞—Ä'])
async def ball(ctx, *, question ):
    answer = random.choice(["–ù–µ—Ç", "–î–∞", "–°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ", "–°–∫–æ—Ä–µ–µ –Ω–µ—Ç", "–°–∫–æ—Ä–µ–µ –¥–∞", "100%", "–£–≤–µ—Ä–µ–Ω –¥–∞", "–ù–µ –∑–∞ —á—Ç–æ", "–ù–µ–∫–æ–≥–¥–∞", "–£ –º–µ–Ω—è –¥–∏–∫–∏–π –ø–æ–Ω–æ—Å", "–ù–µ –∑–∞ —á—Ç–æ", "–ù–µ –∑–Ω–∞—é ü§î", "–£–≤–µ—Ä–µ–Ω –Ω–µ—Ç"])
    embed = discord.Embed(title="–ú–∞–≥–∏—á–µ—Å–∫–∏–π —à–∞—Ä üîÆ", color=bot_color)
    embed.add_field(name="–í–æ–ø—Ä–æ—Å:", value=f"> {question}")
    embed.add_field(name="–û—Ç–≤–µ—Ç:", value=f"{answer}")
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.command(aliases=["—Ç–µ—Å—Ç-–Ω–∞-–≥–µ—è", "–≥–µ–π", "–≥–µ–π-—Ç–µ—Å—Ç"])
async def gay(ctx, member: discord.Member = None):
    if member is None:
        answer = random.randint(0, 100)
        embed = discord.Embed(title="–¢–µ—Å—Ç –Ω–∞ –≥–µ—è :rainbow_flag:", description=f"{ctx.author.mention}, —Ä–µ—à–∏–ª –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –Ω–∞ –≥–µ—è. –û–Ω –Ω–∞ `{answer}%` –≥–µ–π!", color=bot_color)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed=embed)
    else:
        answer = random.randint(0, 100)
        embed = discord.Embed(title="–¢–µ—Å—Ç –Ω–∞ –≥–µ—è :rainbow_flag:", description=f"{ctx.author.mention}, —Ä–µ—à–∏–ª –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç –Ω–∞ –≥–µ—è –¥–ª—è {member.mention} –æ–Ω –Ω–∞ `{answer}%` –≥–µ–π!", color=bot_color)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed=embed)

@client.command(aliases=["—Ç–µ—Å—Ç-–Ω–∞-—Ç—Ä–∞–Ω—Å–∞", "—Ç—Ä–∞–Ω—Å", "—Ç—Ä–∞–Ω—Å-—Ç–µ—Å—Ç"])
async def trans(ctx, member: discord.Member = None):
    if member is None:
        answer = random.randint(0, 100)
        embed = discord.Embed(title="–¢–µ—Å—Ç –Ω–∞ —Ç—Ä–∞–Ω—Å–∞ :transgender_flag:", description=f"{ctx.author.mention}, —Ä–µ—à–∏–ª –ø—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –Ω–∞ —Ç—Ä–∞–Ω—Å–∞. –û–Ω –Ω–∞ `{answer}%` —Ç—Ä–∞–Ω—Å!", color=bot_color)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed=embed)
    else:
        answer = random.randint(0, 100)
        embed = discord.Embed(title="–¢–µ—Å—Ç –Ω–∞ —Ç—Ä–∞–Ω—Å–∞ :transgender_flag:", description=f"{ctx.author.mention}, —Ä–µ—à–∏–ª –∑–∞–ø—É—Å—Ç–∏—Ç—å —Ç–µ—Å—Ç –Ω–∞ —Ç—Ä–∞–Ω—Å–∞ –¥–ª—è {member.mention} –æ–Ω –Ω–∞ `{answer}%` —Ç—Ä–∞–Ω—Å!", color=bot_color)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed=embed)

@client.command(aliases=["–ª—é–±–æ–≤—å"])
async def love(ctx, member: discord.Member = None):
        love_list=[
          f"||{random.randint(1, 9)}% ‚ñà                         ||",
        f"||{random.randint(10, 19)}% ‚ñà‚ñà                        ||",
        f"||{random.randint(20, 29)}% ‚ñà‚ñà‚ñà‚ñà                      ||",
        f"||{random.randint(30, 39)}% ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                    ||",
        f"||{random.randint(40, 49)}% ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                  ||",
        f"||{random.randint(50, 59)}% ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà               ||",
        f"||{random.randint(60, 69)}% ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà            ||",
        f"||{random.randint(70, 79)}% ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà        ||",
        f"||{random.randint(80, 89)}% ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà      ||",
        f"||{random.randint(90, 99)}% ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ||",
      f"||{random.randint(100, 101)}% ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà||",
        ]
        random_love = random.choice(love_list)
        embed = discord.Embed(title="‚ù§ –ò–∑–º–µ—Ä–∏—Ç–µ–ª—å –ª—é–±–≤–∏ ‚ù§", description=f"üíó {ctx.author.mention}\nüíó {member.mention}\n\n{random_love}", color=bot_color)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed=embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.command(aliases=['random', '—Ä–∞–Ω–¥–æ–º'])
async def rand(ctx, num1 = None, num2 = None):
    author= ctx.message.author
    avatar = author.avatar.url
    if num1 != None:
        if num2 != None:
            x = int(num1)
            y = int(num2)
            if x < y:
                value = random.randint(x,y)
                embed=discord.Embed(title='–°–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ', description=f'{author.mention}, –≤–æ—Ç –≤–∞—à–µ —á–∏—Å–ª–æ: \n> **{value}**', colour = bot_color)
                embed.set_author(name=f"{author}", icon_url=f"{avatar}")
                embed.timestamp = datetime.datetime.utcnow()
                embed.set_footer(text=f'{ctx.author.name} \u200b')
                await ctx.reply(embed=embed)
            else:
                await ctx.reply("–ü–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ –≤—Ç–æ—Ä–æ–≥–æ")
        else:
            await ctx.reply('–í—ã –Ω–µ –≤–≤–µ–ª–∏ –Ω–∞–∏–±–æ–ª—å—à–µ–µ —á–∏—Å–ª–æ!')
    else:
        await ctx.reply('–í—ã –Ω–µ –≤–≤–µ–ª–∏ –Ω–∞–∏–º–µ–Ω—å—à–µ–µ —á–∏—Å–ª–æ')

#-------------------------------------------------------------------------------------------------------------
#----------------------------------------------–º—É–∑—ã–∫–∞---------------------------------------------------------

load_dotenv()
players = {}

@client.command()
async def join(ctx):
    channel = ctx.message.author.voice.channel
    voice = get(client.voice_clients, guild=ctx.guild)
    if voice and voice.is_connected():
        await voice.move_to(channel)
    else:
        embed = discord.Embed(title=f'–ë–æ—Ç –ø—Ä–∏—Å–æ–µ–¥–µ–Ω–∏–ª—Å—è –∫ –∫–∞–Ω–∞–ª—É: {channel}', description=f'–ù–∞–ø–∏—à–∏—Ç–µ `{bot_prefix}leave` —á—Ç–æ–± –±–æ—Ç –≤—ã—à–µ–ª –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞.', colour = bot_color)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed=embed)
        voice = await channel.connect()

@client.command()
async def leave(ctx):
    channel = ctx.message.author.voice.channel
    voice=get(client.voice_clients,guild=ctx.guild)
    if voice and voice.is_connected():
        await voice.disconnect()
        embed = discord.Embed(title=f'–ë–æ—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è –æ—Ç –∫–∞–Ω–∞–ª–∞: {channel}', description=f'–ù–∞–ø–∏—à–∏—Ç–µ `{bot_prefix}join` —á—Ç–æ–± –±–æ—Ç –ø—Ä–µ—Å–æ–µ–¥–µ–Ω–∏—Å–ª—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.', colour = bot_color)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed=embed)

# command to play sound from a youtube URL
@client.command()
async def play(ctx, url):
    YDL_OPTIONS = {'format': 'bestaudio', 'noplaylist': 'True'}
    FFMPEG_OPTIONS = {
        'before_options': '-reconnect 1 -reconnect_streamed 1 -reconnect_delay_max 5', 'options': '-vn'}
    voice = get(client.voice_clients, guild=ctx.guild)

    if not voice.is_playing():
        with YoutubeDL(YDL_OPTIONS) as ydl:
            info = ydl.extract_info(url, download=False)
        URL = info['url']
        voice.play(FFmpegPCMAudio(URL, **FFMPEG_OPTIONS))
        voice.is_playing()
        embed = discord.Embed(title=f'<a:cd:969180333092274237> –ú—É–∑—ã–∫–∞', description=f'–ß—Ç–æ –±—ã –≤—ã–∫–ª—é—á–∏—Ç—å —Ç—Ä—ç–∫ –Ω–∞–ø–∏—à–∏—Ç–µ `{bot_prefix}stop`. –ß—Ç–æ –±—ã –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ç—Ä—ç–∫ –Ω–∞ –ø–∞—É–∑—É –Ω–∞–ø–∏—à–∏—Ç–µ `{bot_prefix}pause`.', color = bot_color)
        #embed.set_author(name=f"{ctx.message.author}", icon_url=f"{ctx.author.avatar.url}")
        embed.add_field(name='**–¢—Ä—ç–∫:**', value=url, inline = False)
        #embed.add_field(name='**–ê–≤—Ç–æ—Ä:**', value='None', inline = False)
        #embed.add_field(name='**–°—Å—ã–ª–∫–∞:**', value=f'{url}', inline = False)
        embed.set_thumbnail(url='https://images-ext-1.discordapp.net/external/Y9ec_ju_jMFXEYbE-Ie5kPp5R5im0556dCBV7EPvn8M/https/www.youtube.com/img/desktop/yt_1200.png?width=672&height=672')
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed=embed)

# check if the bot is already playing
    else:
        embed = discord.Embed(title=f"<a:cd:969180333092274237> –ú—É–∑—ã–∫–∞", description=f"–ü–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∫–∞ —Ç–µ–∫—É—â–∞—è –ø–µ—Å–Ω—è –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É `{bot_prefix}stop`.", colour = bot_color)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        embed.set_author(name=f"{ctx.message.author}", icon_url=f"{ctx.author.avatar.url}")
        await ctx.send(embed=embed)
        return

# command to resume voice if it is paused
@client.command()
async def resume(ctx):
    voice = get(client.voice_clients, guild=ctx.guild)

    if not voice.is_playing():
        voice.resume()
        embed = discord.Embed(title=f'–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç—Ä—ç–∫–∞', description=f'{ctx.message.author.mention} –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç —Ç—Ä—ç–∫ —á—Ç–æ–± –µ–≥–æ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –ø–∞—É–∑—É –Ω–∞–ø–∏—à–∏—Ç–µ `{bot_prefix}pause`.', color = bot_color)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.channel.reply(embed=embed)
    else:
        embed = discord.Embed(title=f'–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ —Ç—Ä—ç–∫–∞', description=f'–ú—É–∑—ã–∫–∞ —É–∂–µ –∏–≥—Ä–∞–µ—Ç! –ß—Ç–æ –±—ã –µ—ë –æ—Å—Ç–∞–≤–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–∏—à–∏—Ç–µ `{bot_prefix}stop`.', color = bot_color)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.channel.reply(embed=embed)


# command to pause voice if it is playing
@client.command()
async def pause(ctx):
    voice = get(client.voice_clients, guild=ctx.guild)

    if voice.is_playing():
        voice.pause()
        embed = discord.Embed(title=f'–ü–∞—É–∑–∞', description=f'{ctx.message.author.mention} –°—Ç–∞–≤–∏—Ç —Ç—Ä—ç–∫ –Ω–∞ –ø–∞—É–∑–µ —á—Ç–æ–± –µ–≥–æ –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–∏—à–∏—Ç–µ `{bot_prefix}resume`.', color = bot_color)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.channel.reply(embed=embed)
    else:
        embed = discord.Embed(title=f'–ü–∞—É–∑–∞', description=f'–ú—É–∑—ã–∫–∞ —É–∂–µ –Ω–∞ –ø–∞—É–∑–µ —á—Ç–æ–± –µ–≥–æ –≤–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–∏—à–∏—Ç–µ `{bot_prefix}resume`.', color = bot_color)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.channel.reply(embed=embed)


# command to stop voice
@client.command()
async def stop(ctx):
    voice = get(client.voice_clients, guild=ctx.guild)

    if voice.is_playing():
        voice.stop()
        embed = discord.Embed(title=f'–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å', description=f'{ctx.message.author.mention} –≤—ã–∫–ª—é—á–∞–µ—Ç –º—É–∑—ã–∫—É! –ß—Ç–æ –±—ã –Ω–∞—á–∞—Ç—å –ø—Ä–æ–∏–≥—Ä–æ–≤–Ω–∏–µ –º—É–∑—ã–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ `{bot_prefix}play —Å—Å—ã–ª–∫–∞`.', color = bot_color)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.channel.reply(embed=embed)
    else:
        embed = discord.Embed(title=f'–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å', description=f'–°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç! –ß—Ç–æ –±—ã –Ω–∞—á–∞—Ç—å –ø—Ä–æ–∏–≥—Ä–æ–≤–Ω–∏–µ –º—É–∑—ã–∫–∏ –Ω–∞–ø–∏—à–∏—Ç–µ `{bot_prefix}play —Å—Å—ã–ª–∫–∞`.', color = bot_color)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.channel.reply(embed=embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

player1 = ""
player2 = ""
turn = ""
gameOver = True

board = []

winningConditions = [
    [0, 1, 2],
    [3, 4, 5],
    [6, 7, 8],
    [0, 3, 6],
    [1, 4, 7],
    [2, 5, 8],
    [0, 4, 8],
    [2, 4, 6]
]

@client.command()
async def tictactoe(ctx, p1: discord.Member):
    global count
    global player1
    global player2
    global turn
    global gameOver

    if gameOver:
        global board
        board = [":white_large_square:", ":white_large_square:", ":white_large_square:",
                 ":white_large_square:", ":white_large_square:", ":white_large_square:",
                 ":white_large_square:", ":white_large_square:", ":white_large_square:"]
        turn = ""
        gameOver = False
        count = 0

        player1 = p1
        player2 = ctx.author

        # print the board
        line = ""
        for x in range(len(board)):
            if x == 2 or x == 5 or x == 8:
                line += " " + board[x]
                await ctx.send(line)
                line = ""
            else:
                line += " " + board[x]

        # determine who goes first
        num = random.randint(1, 2)
        if num == 1:
            turn = player1
            await ctx.send("–ù–∞—Å—Ç–∞–ª–∞ –æ—á–µ—Ä–µ–¥—å <@" + str(player1.id) + f"> —á—Ç–æ –±—ã –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å —Ö–æ–¥ –Ω–∞–ø–∏—à–∏—Ç–µ `{bot_prefix}place [–º–µ—Å—Ç–æ]`")
        elif num == 2:
            turn = player2
            await ctx.send("–ù–∞—Å—Ç–∞–ª–∞ –æ—á–µ—Ä–µ–¥—å <@" + str(player2.id) + f"> —á—Ç–æ –±—ã –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å —Ö–æ–¥ –Ω–∞–ø–∏—à–∏—Ç–µ `{bot_prefix}place [–º–µ—Å—Ç–æ]`")
    else:
        await ctx.send("–ò–≥—Ä–∞ —É–∂–µ –∏–¥–µ—Ç! –ó–∞–∫–æ–Ω—á–∏—Ç–µ –µ–≥–æ, –ø—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–∏–Ω–∞—Ç—å –Ω–æ–≤—É—é –∏–≥—Ä—É")

@client.command()
async def place(ctx, pos: int):
    global turn
    global player1
    global player2
    global board
    global count
    global gameOver

    if not gameOver:
        mark = ""
        if turn == ctx.author:
            if turn == player1:
                mark = ":regional_indicator_x:"
            elif turn == player2:
                mark = ":o2:"
            if 0 < pos < 10 and board[pos - 1] == ":white_large_square:" :
                board[pos - 1] = mark
                count += 1

                # print the board
                line = ""
                for x in range(len(board)):
                    if x == 2 or x == 5 or x == 8:
                        line += " " + board[x]
                        await ctx.send(line)
                        line = ""
                    else:
                        line += " " + board[x]

                checkWinner(winningConditions, mark)
                #print(count)
                if gameOver == True:
                    await ctx.send(mark + " –ø–æ–±–µ–¥–∏–ª!")
                elif count >= 9:
                    gameOver = True
                    await ctx.send("–ù–∏—á—å—è")

                # switch turns
                if turn == player1:
                    turn = player2
                elif turn == player2:
                    turn = player1
            else:
                await ctx.send("–í—ã –≤—ã–±—Ä–∞–ª–∏ –Ω–µ —Ç–æ —á–∏—Å–ª–æ –∏–ª–∏ —ç—Ç–æ –º–µ—Å—Ç–æ —É–∂–µ –∑–∞–Ω—è—Ç–æ")#–í—ã–±–µ—Ä–µ—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 9 —á—Ç–æ–± –æ—Å—É—â–µ—Å—Ç–≤–∏—Ç—å —Ö–æ–¥
        else:
            await ctx.send("–°–µ–π—á–∞—Å –æ—á–µ—Ä–µ–¥—å –¥—Ä—É–≥–æ–≥–æ –∏–≥—Ä–æ–∫–∞")
    else:
        await ctx.send(f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –Ω–æ–≤—É—é –∏–≥—Ä—É, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–º–∞–Ω–¥—É `{bot_prefix}tictactoe [@user]`")


def checkWinner(winningConditions, mark):
    global gameOver
    for condition in winningConditions:
        if board[condition[0]] == mark and board[condition[1]] == mark and board[condition[2]] == mark:
            gameOver = True

@tictactoe.error
async def tictactoe_error(ctx, error):
    print(error)
    if isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –∏–≥—Ä–æ–∫–∞ –¥–ª—è –∏–≥—Ä—ã.")
    elif isinstance(error, commands.BadArgument):
        await ctx.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ —É–ø–æ–º—è–Ω—É—Ç—å/–ø–∏–Ω–≥–æ–≤–∞—Ç—å –∏–≥—Ä–æ–∫–æ–≤ (ie. <@688534433879556134>).")

@place.error
async def place_error(ctx, error):
    if isinstance(error, commands.MissingRequiredArgument):
        await ctx.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–æ–∑–∏—Ü–∏—é, –∫–æ—Ç–æ—Ä—É—é –≤—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ—Ç–∏—Ç—å.")
    elif isinstance(error, commands.BadArgument):
        await ctx.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –∑–∞–±—É–¥—å—Ç–µ –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.")

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

connection = sqlite3.connect('database.db') # –∏–ª–∏ :memory:
cursor = connection.cursor()
timestamp = datetime.datetime.now().strftime("%H:%M:%S")
print(f"[BOT {timestamp}] –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ DataBase")

@client.event
async def on_ready():
    while True:
        await client.change_presence(status = discord.Status.online, activity = discord.Activity(type=discord.ActivityType.competing, name=f'{bot_prefix}help'))
        await asyncio.sleep(12)
        await client.change_presence(status = discord.Status.online, activity = discord.Activity(type=discord.ActivityType.competing, name=f'üíõüíô –£–∫—Ä–∞—ó–Ω–∞ –ø–µ—Ä–µ–º–æ–∂–µ'))
        await asyncio.sleep(8)
        await client.change_presence(status = discord.Status.online, activity = discord.Activity(type=discord.ActivityType.competing, name=f'#CloseTheSkyUkraine'))
        await asyncio.sleep(8)
        await client.change_presence(status = discord.Status.online, activity = discord.Activity(type=discord.ActivityType.competing, name=f'discord.gg/udycpczJWE'))
        await asyncio.sleep(10)
        await client.change_presence(status = discord.Status.online, activity = discord.Activity(type=discord.ActivityType.competing, name=f'—á–µ–ª —Å–Ω–∏–∑—É –≥–µ–π ‚Üì'))
        await asyncio.sleep(8)

async def on_ready():
    await client.change_presence(status = discord.Status.dnd)
    
    cursor.execute("""CREATE TABLE IF NOT EXISTS servers (
        guild TEXT,
        server_id INT
    )""")

    cursor.execute("""CREATE TABLE IF NOT EXISTS users (
        name TEXT,
        id INT,
        wallet BIGINT,
        bank BIGINT,
        rep INT,
        lvl INT,
        marry INT,
        guild TEXT,
        server_id INT
    )""")
 
    cursor.execute("""CREATE TABLE IF NOT EXISTS shop (
        role_id INT,
        id INT,
        cost BIGINT
    )""")

    for guild in client.guilds:
        for member in guild.members:
            if cursor.execute(f"SELECT server_id FROM servers WHERE server_id = {guild.id}").fetchone() is None:
                cursor.execute(f"INSERT INTO servers VALUES ('{guild}', {guild.id})")
            if cursor.execute(f"SELECT id FROM users WHERE id = {member.id}").fetchone() is None:
                cursor.execute(f"INSERT INTO users VALUES ('{member}', {member.id}, 300, 1000, 0, 1, 0, '{guild}', {guild.id})")
            else:
                pass
 
    connection.commit()
    timestamp = datetime.datetime.now().strftime("%H:%M:%S")
    print(f'[BOT {timestamp}] client connected')

@client.event
async def on_member_remove(member):
    if member.guild.id == 974027749679321138:
        channel = client.get_channel(974027750069375010)
        embed = discord.Embed(title="–ú—ã –±—É–¥–µ–º —Å–∫—É—á–∞—Ç—å üò•", description=f"{member.mention}, –≤—ã—à—ë–ª —Å —Å–µ—Ä–≤–µ—Ä–∞(", color=bot_color)
        await channel.send(embed=embed)

@client.event
async def on_member_join(member):
    if member.guild.id == 974027749679321138:
        channel = client.get_channel(974027750069375010)
        embed = discord.Embed(title="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", description=f"{member.mention}, –ø—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–∞—Ç—å –æ–±—â–µ–Ω–∏–µ –ø—Ä–æ—á—Ç–∏ <#974027749704466522>", color=bot_color)
        await channel.send(embed=embed)
async def on_member_join(member):
    if cursor.execute(f"SELECT id FROM users WHERE id = {member.id}").fetchone() is None:
        cursor.execute(f"INSERT INTO users VALUES ('{member}', {member.id}, 300, 1000, 0, 1, 0, {member.guild.id})")
        connection.commit()
    else:
        pass
 
 
@client.command(aliases = ['cash', 'bal', '–±–∞–ª–∞–Ω—Å'])
async def balance(ctx, member: discord.Member = None):
    if member is None:
        embed = discord.Embed(title=f'–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {ctx.author}', description = f""":dollar: –ù–∞ —Ä—É–∫–∞—Ö: **{cursor.execute("SELECT wallet FROM users WHERE id = {}".format(ctx.author.id)).fetchone()[0]} {bot_coin}**\n:credit_card: –í –±–∞–Ω–∫–µ: **{cursor.execute("SELECT bank FROM users WHERE id = {}".format(ctx.author.id)).fetchone()[0]} {bot_coin}**\n:moneybag: –í—Å–µ–≥–æ: **{cursor.execute("SELECT wallet + bank FROM users WHERE id = {}".format(ctx.author.id)).fetchone()[0]} {bot_coin}**\n\n–ß—Ç–æ –±—ã –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å –±–æ–ª—å—à–µ –¥–µ–Ω–µ–≥ –æ—Ç–ø—Ä–∞–≤—Ç–µ—Å—å –Ω–∞ —Ä–æ–±–æ—Ç—É: `{bot_prefix}work`""",color = bot_color)
        embed.set_thumbnail(url=ctx.author.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed=embed)
        
    else:
        embed = discord.Embed(title=f'–ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member}', description = f""":dollar: –ù–∞ —Ä—É–∫–∞—Ö: **{cursor.execute("SELECT wallet FROM users WHERE id = {}".format(member.id)).fetchone()[0]} {bot_coin}**\n:credit_card: –í –±–∞–Ω–∫–µ: **{cursor.execute("SELECT bank FROM users WHERE id = {}".format(member.id)).fetchone()[0]} {bot_coin}**\n:moneybag: –í—Å–µ–≥–æ: **{cursor.execute("SELECT wallet + bank FROM users WHERE id = {}".format(member.id)).fetchone()[0]} {bot_coin}**""",color = bot_color)
        embed.set_thumbnail(url=member.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed=embed)
 
@client.command(aliases = ['level', '–ª–≤–ª', '—É—Ä–æ–≤–µ–Ω—å'])
async def lvl(ctx, member: discord.Member = None):
    if member is None:
        embed = discord.Embed(title=f'–£—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {ctx.author}', description = f""":bar_chart: –£—Ä–æ–≤–µ–Ω—å: **{cursor.execute("SELECT lvl FROM users WHERE id = {}".format(ctx.author.id)).fetchone()[0]}**\n\n –û–±—â–∞–π—Å—è —Å –¥—Ä—É–≥–∏–º–∏ —á—Ç–æ –±—ã –ø—Ä–æ–∫–æ—á–∞—Ç—å —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å""", color = bot_color)
        embed.set_thumbnail(url=ctx.author.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed=embed)
        
    else:
        embed = discord.Embed(title=f'–£—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member}', description = f""":bar_chart: –£—Ä–æ–≤–µ–Ω—å: **{cursor.execute("SELECT lvl FROM users WHERE id = {}".format(member.id)).fetchone()[0]}**\n\n –û–±—â–∞–π—Å—è —Å –¥—Ä—É–≥–∏–º–∏ —á—Ç–æ –±—ã –ø—Ä–æ–∫–æ—á–∞—Ç—å —Å–≤–æ–π —É—Ä–æ–≤–µ–Ω—å""", color = bot_color)
        embed.set_thumbnail(url=member.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed=embed)

@client.command()
@commands.has_permissions(administrator = True)
async def award(ctx, member: discord.Member = None, amount: int = None):
    if member is None:
        await ctx.send(embed = discord.Embed (f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –∂–µ–ª–∞–µ—Ç–µ –≤—ã–¥–∞—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é —Å—É–º–º—É", color = bot_color))
    else:
        if amount is None:
            await ctx.send(embed = discord.Embed (f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é –∂–µ–ª–∞–µ—Ç–µ –Ω–∞—á–∏—Å–ª–∏—Ç—å –Ω–∞ —Å—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", color = bot_color))
        elif amount < 1:
            await ctx.send(embed = discord.Embed (f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –±–æ–ª—å—à–µ 1 {bot_coin}", colour = bot_color))
        else:
            cursor.execute("UPDATE users SET cash = cash + {} WHERE id = {}".format(amount, member.id))
            connection.commit()
 
            await ctx.message.add_reaction('‚úÖ')
 
 
@client.command()
@commands.has_permissions(administrator = True)
async def take(ctx, member: discord.Member = None, amount = None):
    if member is None:
        await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –∂–µ–ª–∞–µ—Ç–µ –æ—Ç–Ω—è—Ç—å —Å—É–º–º—É –¥–µ–Ω–µ–≥")
    else:
        if amount is None:
            await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é –∂–µ–ª–∞–µ—Ç–µ –æ—Ç–Ω—è—Ç—å —É —Å—á–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        elif amount == 'all':
            cursor.execute("UPDATE users SET cash = {} WHERE id = {}".format(0, member.id))
            connection.commit()
 
            await ctx.message.add_reaction('‚úÖ')
        elif int(amount) < 1:
            await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –±–æ–ª—å—à–µ 1 :leaves:")
        else:
            cursor.execute("UPDATE users SET cash = cash - {} WHERE id = {}".format(int(amount), member.id))
            connection.commit()
 
            await ctx.message.add_reaction('‚úÖ')
 
@client.command()
async def pay(ctx, member: discord.Member = None, amount: int = None):
    if member is None:
        await ctx.reply(embed = discord.Embed (f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –∂–µ–ª–∞–µ—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—É—é —Å—É–º–º—É", color = bot_color))
    else:
        if amount is None:
            await ctx.reply(embed = discord.Embed (f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é –∂–µ–ª–∞–µ—Ç–µ –Ω–∞—á–∏—Å–ª–∏—Ç—å –Ω–∞ —Å—á–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", color = bot_color))
        elif amount < 1:
            await ctx.reply(embed = discord.Embed (f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –±–æ–ª—å—à–µ 1 {bot_coin}", colour = bot_color))
        else:
            cursor.execute("UPDATE users SET bank = bank + {} WHERE id = {}".format(amount, member.id))
            cursor.execute("UPDATE users SET bank = bank - {} WHERE id = {}".format(amount, ctx.author.id))
            connection.commit()
 
            await ctx.message.add_reaction('‚úÖ')

@client.command(aliases=['deposit'])
async def dep(ctx, amount: int = None):
        if amount is None:
            await ctx.reply(embed = discord.Embed (f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É, –∫–æ—Ç–æ—Ä—É—é –∂–µ–ª–∞–µ—Ç–µ –Ω–∞—á–∏—Å–ª–∏—Ç—å –≤ –±–∞–Ω–∫", color = bot_color))
        elif amount < 1:
            await ctx.reply(embed = discord.Embed (f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –±–æ–ª—å—à–µ 1 {bot_coin}", colour = bot_color))
        else:
            cursor.execute("UPDATE users SET bank = bank + {} WHERE id = {}".format(amount, ctx.author.id))
            cursor.execute("UPDATE users SET wallet = wallet - {} WHERE id = {}".format(amount, ctx.author.id))
            connection.commit()
 
            await ctx.message.add_reaction('‚úÖ')

@client.command(aliases=['wd'])
async def withdraw(ctx, amount: int = None):
        if amount is None:
            await ctx.reply(embed = discord.Embed (f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –¥–µ–ø–æ–∑–∏—Ç–∞, –∫–æ—Ç–æ—Ä—É—é –∂–µ–ª–∞–µ—Ç–µ —Å–Ω—è—Ç—å", color = bot_color))
        elif amount < 1:
            await ctx.reply(embed = discord.Embed (f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –±–æ–ª—å—à–µ 1 {bot_coin}", colour = bot_color))
        else:
            cursor.execute("UPDATE users SET bank = bank - {} WHERE id = {}".format(amount, ctx.author.id))
            cursor.execute("UPDATE users SET wallet = wallet + {} WHERE id = {}".format(amount, ctx.author.id))
            connection.commit()
 
            await ctx.message.add_reaction('‚úÖ')

@client.command(aliases=['—Ä–∞–±–æ—Ç–∞—Ç—å', '—Ä–∞–±–æ—Ç–∞'])
@commands.cooldown(1, 900, commands.BucketType.user)
async def work(ctx):
            work = random.choice(['–≥–æ—Ä–Ω–∏—á–Ω–æ–π', '–æ—Ñ–∏—Ü–∏–∞–Ω—Ç–æ–º', '–≤—Ä–∞—á—ë–º', '–≤–æ–¥–∏—Ç–µ–ª–µ–º', '—Ç–∞–∫—Å–∏—Å—Ç–æ–º', '–ø–æ–≤–∞—Ä–æ–º', '—É–±–æ—Ä—â–∏–∫–æ–º', '—Å—Ç—Ä–∏–ø—Ç–∏–∑—ë—Ä–æ–º', '–¥–æ—Å—Ç–∞–≤—â–∏–∫–æ–º Glovo', '–ø–∞—Ä–∏–∫–º–∞—Ö–µ—Ä–æ–º', '–ø—Ä–æ–¥–∞–≤—Ü–æ–º', '—ç–ª–µ–∫—Ç—Ä–∏–∫–æ–º', '—Å–∞–Ω—Ç–µ—Ö–Ω–∏–∫–æ–º', '–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç–æ–º', '–¥–∞–ª—å–Ω–æ–±–æ–π—â–∏–∫–æ–º', '—É—á–∏—Ç–µ–ª–µ–º', '–∞–ø—Ç–µ–∫–∞—Ä–µ–º'])
            amount = random.randint(100, 300)
            embed = discord.Embed(title=f"–†–∞–±–æ—Ç–∞—Ç—å", description=f"{ctx.author.mention} –≤—ã —É—Å–ø–µ—à–Ω–æ –ø–æ—Ä–∞–±–æ—Ç–∞–ª–∏ **{work}**, –∏ –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ **{amount} {bot_coin}**", colour = bot_color)
            embed.timestamp = datetime.datetime.utcnow()
            embed.set_footer(text=f'{ctx.author.name} \u200b')
            await ctx.reply(embed=embed)
            cursor.execute("UPDATE users SET wallet = wallet + {} WHERE id = {}".format(amount, ctx.author.id))
            connection.commit()

@work.error
async def command_name_error(ctx, error):
    if isinstance(error, commands.CommandOnCooldown):
        retry_after = str(datetime.timedelta(seconds=error.retry_after)).split('.')[0]
        embed = discord.Embed(title=f"–¢—ã —É–∂–µ –ø–æ—Ä–∞–±–æ—Ç–∞–ª!",description=f"–ú–æ–∂–µ—à—å –æ—Ç–¥—ã—Ö–Ω–∞—Ç—å –µ—â—ë `{retry_after}` —Å–µ–∫.", color=bot_color)#error.retry_after:.2f
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed=embed)

@client.command(aliases = ['add-shop'])
@commands.has_permissions(administrator = True)
async def add_shop(ctx, role: discord.Role = None, cost: int = None):
    if role is None:
        await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å, –∫–æ—Ç–æ—Ä—É—é –≤—ã –∂–µ–ª–∞–µ—Ç–µ –≤–Ω–µ—Å—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω")
    else:
        if cost is None:
            await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Å—Ç–æ–∏–º–æ—Å—Ç—å –¥–ª—è –¥–∞–Ω–Ω–æ–π–π —Ä–æ–ª–∏")
        elif cost < 0:
            await ctx.send(f"**{ctx.author}**, —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–æ–ª–∏ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ç–∞–∫–æ–π –º–∞–ª–µ–Ω—å–∫–æ–π")
        else:
            cursor.execute("INSERT INTO shop VALUES ({}, {}, {})".format(role.id, ctx.guild.id, cost))
            connection.commit()
 
            await ctx.message.add_reaction('‚úÖ')
 
 
@client.command(aliases = ['remove-shop'])
@commands.has_permissions(administrator = True)
async def remove_shop(ctx, role: discord.Role = None):
    if role is None:
        await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å, –∫–æ—Ç–æ—Ä—É—é –≤—ã –∂–µ–ª–∞–µ—Ç–µ —É–¥–∞–ª–∏—Ç—å –∏–∑ –º–∞–≥–∞–∑–∏–Ω–∞")
    else:
        cursor.execute("DELETE FROM shop WHERE role_id = {}".format(role.id))
        connection.commit()
 
        await ctx.message.add_reaction('‚úÖ')
 
 
@client.command(aliases = ['–º–∞–≥–∞–∑–∏–Ω'])
async def shop(ctx):
    embed = discord.Embed(title = f'–ú–∞–≥–∞–∑–∏–Ω {ctx.guild.name}', color=bot_color)
    embed.set_thumbnail(url=ctx.guild.icon.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')

    counter = 0
 
    for row in cursor.execute("SELECT role_id, cost FROM shop WHERE id = {}".format(ctx.guild.id)):
        if ctx.guild.get_role(row[0]) != None:
            counter += 1
            embed.add_field(
                name = f"‚Ññ{counter} "+"{"+f" \n –¶–µ–Ω–∞: {row[1]} {bot_coin} \n –†–æ–ª—å:",
                value = f"{ctx.guild.get_role(row[0]).mention}"+"\n**}**",
                inline = False
            )
        else:
            pass
 
    await ctx.reply(embed = embed)
 
@client.command(aliases = ['buy-role'])
async def buy(ctx, role: discord.Role = None):
    if role is None:
        await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —Ä–æ–ª—å, –∫–æ—Ç–æ—Ä—É—é –≤—ã –∂–µ–ª–∞–µ—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏")
    else:
        if role in ctx.author.roles:
            await ctx.send(f"**{ctx.author}**, —É –≤–∞—Å —É–∂–µ –∏–º–µ–µ—Ç—Å—è –¥–∞–Ω–Ω–∞—è —Ä–æ–ª—å")
        elif cursor.execute("SELECT cost FROM shop WHERE role_id = {}".format(role.id)).fetchone()[0] > cursor.execute("SELECT wallet FROM users WHERE id = {}".format(ctx.author.id)).fetchone()[0]:
            await ctx.send(f"**{ctx.author}**, —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ –¥–∞–Ω–Ω–æ–π —Ä–æ–ª–∏")
        else:
            await ctx.author.add_roles(role)
            cursor.execute("UPDATE users SET wallet = wallet - {} WHERE id = {}".format(cursor.execute("SELECT cost FROM shop WHERE role_id = {}".format(role.id)).fetchone()[0], ctx.author.id))
            connection.commit()
 
            await ctx.message.add_reaction('‚úÖ')
 
 
@client.command(aliases = ['+rep'])
async def rep(ctx, member: discord.Member = None):
    if member is None:
        await ctx.send(f"**{ctx.author}**, —É–∫–∞–∂–∏—Ç–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞")
    else:
        if member.id == ctx.author.id:
            await ctx.send(f"**{ctx.author}**, –≤—ã –Ω–µ –º–æ–∂–µ—Ç–µ —É–∫–∞–∑–∞—Ç—å —Å–º–æ–≥–æ —Å–µ–±—è")
        else:
            cursor.execute("UPDATE users SET rep = rep + {} WHERE id = {}".format(1, member.id))
            connection.commit()
 
            await ctx.message.add_reaction('‚úÖ')
 
 
@client.command(aliases = ['lb'])
async def leaderboard(ctx):
    embed = discord.Embed(title = '–¢–æ–ø 10 —Å–µ—Ä–≤–µ—Ä–∞')
    counter = 0
 
    for row in cursor.execute("SELECT name, wallet FROM users WHERE server_id = {} ORDER BY wallet DESC LIMIT 10".format(ctx.guild.id)):
        counter += 1
        embed.add_field(
            name = f'# {counter} | `{row[0]}`',
            value = f'–ë–∞–ª–∞–Ω—Å: {row[1]}',
            inline = False,
            colour = bot_color
        )
 
    await ctx.send(embed = embed)


@client.command(aliases = ['–ø—Ä–æ—Ñ–∏–ª—å'])
async def profile(ctx, member: discord.Member = None):
    if member is None:
        id_marry = cursor.execute("SELECT marry FROM users WHERE id = {}".format(ctx.author.id)).fetchone()[0]
        embed = discord.Embed(title=f'–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {ctx.message.author}', description=f'**–ù–∞ —Ä—É–∫–∞—Ö:**\n{cursor.execute("SELECT wallet FROM users WHERE id = {}".format(ctx.author.id)).fetchone()[0]} {bot_coin}\n\n–í –±–∞–Ω–∫–µ: {cursor.execute("SELECT bank FROM users WHERE id = {}".format(ctx.author.id)).fetchone()[0]} {bot_coin}\n\n**:zap: –£—Ä–æ–≤–µ–Ω—å:**\n{cursor.execute("SELECT lvl FROM users WHERE id = {}".format(ctx.author.id)).fetchone()[0]}\n\n**:military_medal: –†–µ–ø—É—Ç–∞—Ü–∏—è:**\n{cursor.execute("SELECT rep FROM users WHERE id = {}".format(ctx.author.id)).fetchone()[0]}\n\n**:cake: –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è:**\n–Ω–µ —É–∫–∞–∑–∞–Ω–æ\n\n**üíû –°–≤–∞–¥—å–±–∞:**\n<@{id_marry}>\n\n', colour = bot_color)
        embed.set_author(name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
        embed.set_thumbnail(url=ctx.message.author.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed=embed)
    else:
        id_mamber_marry = cursor.execute("SELECT marry FROM users WHERE id = {}".format(member.id)).fetchone()[0]
        embed = discord.Embed(title=f'–ü—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member}', description=f'**–ù–∞ —Ä—É–∫–∞—Ö:**\n{cursor.execute("SELECT wallet FROM users WHERE id = {}".format(member.id)).fetchone()[0]} {bot_coin}\n\n–í –±–∞–Ω–∫–µ: {cursor.execute("SELECT bank FROM users WHERE id = {}".format(member.id)).fetchone()[0]} {bot_coin}\n\n**:zap: –£—Ä–æ–≤–µ–Ω—å:**\n{cursor.execute("SELECT lvl FROM users WHERE id = {}".format(member.id)).fetchone()[0]}\n\n**:military_medal: –†–µ–ø—É—Ç–∞—Ü–∏—è:**\n{cursor.execute("SELECT rep FROM users WHERE id = {}".format(member.id)).fetchone()[0]}\n\n**:cake: –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è:**\n–î–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω–∞\n\n**üíû –°–≤–∞–¥—å–±–∞:**\n<@{id_mamber_marry}>\n\n', colour = bot_color)
        embed.set_author(name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
        embed.set_thumbnail(url=member.avatar.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed=embed)

@client.command(aliases=["–∫–∞–∑–∏–Ω–æ"])
async def casino(ctx, amount: int):
    def check(m):
        return m.author.id == ctx.author.id
     
    embed = discord.Embed(description=f"{ctx.author.mention} –∫–∞–∫–æ–µ —á–∏—Å–ª–æ –≤—ã–ø–∞–¥–µ—Ç? –æ—Ç 1 –¥–æ 6 üé≤", color=bot_color)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed)

    try:
        # –û–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. timeout - –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è.
        answer = await client.wait_for("message", check=check, timeout=30)
        answer = answer.content
    except TimeoutError:
        # –ï—Å–ª–∏ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –≤—ã—à–ª–æ.
        return await ctx.reply('–í—Ä–µ–º—è –≤—ã—à–ª–æ!')

    # –ß–∏—Å–ª–æ –æ—Ç 1 –¥–æ 6
    number = random.randint(1, 6)

    if re.match(r'[1-6]', answer):
        if number == int(answer):
            embed = discord.Embed(title=f"–í—ã –≤—ã–π–≥—Ä–∞–ª–∏ {amount*3} {bot_coin}", color=discord.Color.green())
            embed.timestamp = datetime.datetime.utcnow()
            embed.set_footer(text=f'{ctx.author.name} \u200b')
            cursor.execute("UPDATE users SET bank = bank + {} WHERE id = {}".format(amount*3, ctx.author.id))
            await ctx.reply(embed=embed)
        else:
            embed = discord.Embed(title=f"–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {amount*3} {bot_coin}", color=discord.Color.red())
            embed.timestamp = datetime.datetime.utcnow()
            embed.set_footer(text=f'{ctx.author.name} \u200b')
            cursor.execute("UPDATE users SET bank = bank - {} WHERE id = {}".format(amount*3, ctx.author.id))
            return await ctx.reply(embed=embed)
    else:
        return await ctx.reply('–ù—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å —á–∏—Å–ª–æ!')

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.command()
async def minecraft(ctx, arg):
    r = requests.get('https://api.minehut.com/server/' + arg + '?byName=true')
    json_data = r.json()

    description = json_data["server"]["motd"]
    online = str(json_data["server"]["online"])
    playerCount = str(json_data["server"]["playerCount"])

    embed = discord.Embed(
        title=arg + "",
        description='–û–ø–∏—Å–∞–Ω–∏–µ: ' + description + '\n–û–Ω–ª–∞–π–Ω: ' + online + '\n–ò–≥—Ä–æ–∫–æ–≤: ' + playerCount,
        color=discord.Color.dark_green()
    )
    embed.set_thumbnail(url="https://i1.wp.com/www.craftycreations.net/wp-content/uploads/2019/08/Grass-Block-e1566147655539.png?fit=500%2C500&ssl=1")

    await ctx.reply(embed=embed)

#-------------------------------------------------------------------------------------------------------------
#-----------------------------------------wot-blitz-----------------------------------------------------------
 
login_dict = {
}

def get_account_id(player, server):
    data = requests.get(
        f"https://api.wotblitz.{server}/wotb/account/list/?application_id=95523cc25e231e510f678729e21a9e10&search={player}")
    json_data = json.loads(data.text)
    info = json_data['data']
    account_id = info[0]['account_id']
    return account_id


def get_clan_id(account_id, server):
    data = requests.get(
        f"https://api.wotblitz.{server}/wotb/clans/accountinfo/?application_id=95523cc25e231e510f678729e21a9e10&account_id={account_id}")
    json_data = json.loads(data.text)
    total_data = json_data['data']
    player_id_category = total_data[f'{account_id}']
    if player_id_category is None:
        clan_id = None
    else:
        clan_id = player_id_category['clan_id']
    return clan_id

@client.command()
async def wot_blitz(ctx, player=None, *, server=None):
    if player is None and server is None:
        try:
            for key in login_dict:
                if key == f"{ctx.author.id}":
                    print(login_dict[key])
                    player = login_dict[key][0]
                    #print(player)
                    server = login_dict[key][1]
                else:
                    print(key)
        except:
            await ctx.send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –±–æ—Ç–∞")

    if server is None:
        await ctx.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä.")
    else:
        if server == "eu" or server == "Eu" or server == "EU":
            server = "eu"
        elif server == "na" or server == "NA":
            server = "com"
        elif server == "ru" or server == "Ru" or server == "RU":
            server = "ru"
        elif server == "asia" or server == "Asia" or server == "ASIA":
            server = "asia"
        else:
            await ctx.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä.")

    if player is None:
        await ctx.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –∏–≥—Ä–æ–∫–∞.")
    else:
        try:
            account_id = get_account_id(player=player, server=server)

            data = requests.get(
                f"https://api.wotblitz.{server}/wotb/account/info/?application_id=95523cc25e231e510f678729e21a9e10&account_id={account_id}")
            json_data = json.loads(data.text)

            # json subcatagory scraping
            total_data = json_data['data']
            player_id_category = total_data[f'{account_id}']
            player_nickname = player_id_category['nickname']
            statistic = player_id_category['statistics']
            player_stats = statistic['all']

            total_wins = player_stats['wins']
            total_losses = player_stats['losses']
            total_random_battles = player_stats['battles']
            total_frags = player_stats['frags']

            damage_dealt = player_stats['damage_dealt']
            damage_received = player_stats['damage_received']

            player_last_battle = datetime.datetime.fromtimestamp(player_id_category['last_battle_time'])
            account_creation_date = datetime.datetime.fromtimestamp(player_id_category['created_at'])

            embed = discord.Embed(title=f"`{player_nickname}` –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä—ã",
                          description="<:WoTB_logo:961241112998182963> –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Å–µ–π –∏–≥—Ä—ã –∏–≥—Ä–æ–∫–∞ WoTBlitz:",
                          colour=bot_color)

            winrate = float("{0:.2f}".format(total_wins / total_random_battles * 100))
            damage_ratio = float("{0:.2f}".format(damage_dealt / damage_received))

            embed.set_author(name=ctx.message.author, icon_url=ctx.author.avatar.url)
            embed.add_field(name=':triangular_flag_on_post: **–ë–æ—ë–≤**', value=f'‚îï`{total_random_battles}`',
                            inline=True)
            embed.add_field(name=':100: **–ü–æ–±–µ–¥**', value=f'‚îï`{total_wins}`', inline=True)
            embed.add_field(name=':flag_white: **–ü–æ—Ä–∞–∂–µ–Ω–∏–π**', value=f'‚îï`{total_losses}`', inline=True)
            embed.add_field(name=':dart: **–í–∏–Ω—Ä–µ–π—Ç**', value=f'‚îï`{winrate}%`', inline=True)
            embed.add_field(name=':no_entry_sign: **–£–Ω–µ—á—Ç–æ–∂–µ–Ω–æ/–§—Ä–∞–≥–æ–≤**', value=f'‚îï`{total_frags}`', inline=True)
            embed.add_field(name=':hourglass_flowing_sand: **–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É—Ä–æ–Ω–∞**', value=f'‚îï`{damage_ratio}`', inline=True)
            embed.add_field(name=f":clock1: –°–æ–∑–¥–∞–Ω: `{account_creation_date.strftime('%Y-%m-%d %H:%M:%S')}`",
                            value='==================================', inline=False)

            clan_id = get_clan_id(account_id=account_id, server=server)
            if clan_id is None:
                embed.add_field(name=':x: **–û—à–∏–±–∫–∞**', value=f'‚îï`{player_nickname}` –ª–∏–±–æ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –∫–ª–∞–Ω–µ, –ª–∏–±–æ '
                                                            f'–ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å c __**{bot_owner}'
                                                            f'**__ –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∏–µ-–Ω–∏–±—É–¥—å –≤–æ–ø—Ä–æ—Å—ã '
                                                            f'–∏–ª–∏ –æ–ø–∞—Å–µ–Ω–∏—è.', inline=False)
                embed.set_footer(
                    text=f"–°–µ—Ä–≤–µ—Ä: {server} | ID Blitz Account: {account_id} | –ü–æ—Å–ª–µ–¥–Ω–∏–π –±–æ–π: {player_last_battle.strftime('%Y-%m-%d %H:%M:%S')}")

            else:
                data = requests.get(
                    f"https://api.wotblitz.{server}/wotb/clans/info/?application_id=95523cc25e231e510f678729e21a9e10&clan_id={clan_id}")
                json_data = json.loads(data.text)

                total_data = json_data['data']
                clan_id_category = total_data[f'{clan_id}']
                clan_name = clan_id_category['name']
                member_count = clan_id_category['members_count']

                embed.add_field(name=':trident: **–ö–ª–∞–Ω**', value=f'‚îï`{clan_name}`', inline=True)
                embed.add_field(name=':pencil: **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤**', value=f'‚îï`{member_count}`', inline=True)

                embed.set_footer(
                    text=f"–°–µ—Ä–≤–µ—Ä: {server} | ID Blitz Account: {account_id} | –ü–æ—Å–ª–µ–¥–Ω–∏–π –±–æ–π: {player_last_battle.strftime('%Y-%m-%d %H:%M:%S')}")

            await ctx.send(embed=embed)
        except IndexError:
            await ctx.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{player}` –Ω–µ –Ω–∞–π–¥–µ–Ω.")
       
#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------wot---------------------------------------------------------------

login_dict = {
}

def get_account_id_wot(player, server):
    data = requests.get(
        f"https://api.worldoftanks.{server}/wot/account/list/?application_id=22bd610df6329f43159fa91df2b0d969&search={player}")
    json_data = json.loads(data.text)
    info = json_data['data']
    account_id = info[0]['account_id']
    return account_id


def get_clan_id(account_id, server):
    data = requests.get(
        f"https://api.worldoftanks.{server}/wot/clans/accountinfo/?application_id=22bd610df6329f43159fa91df2b0d969&account_id={account_id}")
    json_data = json.loads(data.text)
    total_data = json_data['data']
    player_id_category = total_data[f'{account_id}']
    if player_id_category is None:
        clan_id = None
    else:
        clan_id = player_id_category['clan_id']
    return clan_id

@client.command()
async def wot(ctx, player=None, *, server=None):
    if player is None and server is None:
        try:
            for key in login_dict:
                if key == f"{ctx.author.id}":
                    print(login_dict[key])
                    player = login_dict[key][0]
                    #print(player)
                    server = login_dict[key][1]
                else:
                    print(key)
        except:
            await ctx.send("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –≤–ª–∞–¥–µ–ª—å—Ü–µ–º –±–æ—Ç–∞")

    if server is None:
        await ctx.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ —Å–µ—Ä–≤–µ—Ä.")
    else:
        if server == "eu" or server == "Eu" or server == "EU":
            server = "eu"
        elif server == "na" or server == "NA":
            server = "com"
        elif server == "ru" or server == "Ru" or server == "RU":
            server = "ru"
        elif server == "asia" or server == "Asia" or server == "ASIA":
            server = "asia"
        else:
            await ctx.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä.")

    if player is None:
        await ctx.send("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∏–∫ –∏–≥—Ä–æ–∫–∞.")
    else:
        try:
            account_id = get_account_id_wot(player=player, server=server)

            data = requests.get(
                f"https://api.worldoftanks.{server}/wot/account/info/?application_id=22bd610df6329f43159fa91df2b0d969&account_id={account_id}")
            json_data = json.loads(data.text)

            # json subcatagory scraping
            total_data = json_data['data']
            player_id_category = total_data[f'{account_id}']
            player_nickname = player_id_category['nickname']
            statistic = player_id_category['statistics']
            player_stats = statistic['all']

            total_wins = player_stats['wins']
            total_losses = player_stats['losses']
            total_random_battles = player_stats['battles']
            total_frags = player_stats['frags']

            damage_dealt = player_stats['damage_dealt']
            damage_received = player_stats['damage_received']

            player_last_battle = datetime.datetime.fromtimestamp(player_id_category['last_battle_time'])
            account_creation_date = datetime.datetime.fromtimestamp(player_id_category['created_at'])

            embed = discord.Embed(title=f"`{player_nickname}` –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≥—Ä—ã",
                          description="<:WoTB_logo:961241112998182963> –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Å–µ–π –∏–≥—Ä—ã –∏–≥—Ä–æ–∫–∞ WoTBlitz:",
                          colour=bot_color)

            winrate = float("{0:.2f}".format(total_wins / total_random_battles * 100))
            damage_ratio = float("{0:.2f}".format(damage_dealt / damage_received))

            embed.set_author(name=ctx.message.author, icon_url=ctx.author.avatar.url)
            embed.add_field(name=':triangular_flag_on_post: **–ë–æ—ë–≤**', value=f'‚îï`{total_random_battles}`',
                            inline=True)
            embed.add_field(name=':100: **–ü–æ–±–µ–¥**', value=f'‚îï`{total_wins}`', inline=True)
            embed.add_field(name=':flag_white: **–ü–æ—Ä–∞–∂–µ–Ω–∏–π**', value=f'‚îï`{total_losses}`', inline=True)
            embed.add_field(name=':dart: **–í–∏–Ω—Ä–µ–π—Ç**', value=f'‚îï`{winrate}%`', inline=True)
            embed.add_field(name=':no_entry_sign: **–£–Ω–µ—á—Ç–æ–∂–µ–Ω–æ/–§—Ä–∞–≥–æ–≤**', value=f'‚îï`{total_frags}`', inline=True)
            embed.add_field(name=':hourglass_flowing_sand: **–ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —É—Ä–æ–Ω–∞**', value=f'‚îï`{damage_ratio}`', inline=True)
            embed.add_field(name=f":clock1: –°–æ–∑–¥–∞–Ω: `{account_creation_date.strftime('%Y-%m-%d %H:%M:%S')}`",
                            value='==================================', inline=False)

            clan_id = get_clan_id(account_id=account_id, server=server)
            if clan_id is None:
                embed.add_field(name=':x: **–û—à–∏–±–∫–∞**', value=f'‚îï`{player_nickname}` –ª–∏–±–æ –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –∫–ª–∞–Ω–µ, –ª–∏–±–æ '
                                                            f'–ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ —Å–≤—è–∂–∏—Ç–µ—Å—å c __**–§–µ–ª–∏–∫—Å#0001'
                                                            f'**__ –µ—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –∫–∞–∫–∏–µ-–Ω–∏–±—É–¥—å –≤–æ–ø—Ä–æ—Å—ã '
                                                            f'–∏–ª–∏ –æ–ø–∞—Å–µ–Ω–∏—è.', inline=False)
                embed.set_footer(
                    text=f"–°–µ—Ä–≤–µ—Ä: {server} | ID Blitz Account: {account_id} | –ü–æ—Å–ª–µ–¥–Ω–∏–π –±–æ–π: {player_last_battle.strftime('%Y-%m-%d %H:%M:%S')}")

            else:
                data = requests.get(
                    f"https://api.worldoftanks.{server}/wot/clans/info/?application_id=22bd610df6329f43159fa91df2b0d969&clan_id={clan_id}")
                json_data = json.loads(data.text)

                total_data = json_data['data']
                clan_id_category = total_data[f'{clan_id}']
                clan_name = clan_id_category['name']
                member_count = clan_id_category['members_count']

                embed.add_field(name=':trident: **–ö–ª–∞–Ω**', value=f'‚îï`{clan_name}`', inline=True)
                embed.add_field(name=':pencil: **–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏–≥—Ä–æ–∫–æ–≤**', value=f'‚îï`{member_count}`', inline=True)

                embed.set_footer(
                    text=f"–°–µ—Ä–≤–µ—Ä: {server} | ID Blitz Account: {account_id} | –ü–æ—Å–ª–µ–¥–Ω–∏–π –±–æ–π: {player_last_battle.strftime('%Y-%m-%d %H:%M:%S')}")

            await ctx.send(embed=embed)
        except IndexError:
            await ctx.send(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å `{player}` –Ω–µ –Ω–∞–π–¥–µ–Ω.")

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.group(invoke_without_command = True, aliases=["—Ñ–µ–π–∫", "unreal", "tin"])
async def fake(ctx):
    await ctx.message.reply(f"{ctx.author.name}, —Ç–∏–ø —á–∞—Ç–∞ –Ω–µ —É–∫–∞–∑–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–∑–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –ø–æ–º–æ—â–∏ (`{bot_prefix}help create`)")

@fake.command(aliases=["–ø–µ—Ä—Å–æ–Ω–∞–∂", "persona"])
async def personality(ctx):
    fake = Faker('ru_RU')
    embed = discord.Embed(title="–†–∞–Ω–¥–æ–º–Ω–∞—è –ª–∏—á–Ω–æ—Å—Ç—å üïµÔ∏è‚Äç‚ôÄÔ∏è", color=bot_color)
    embed.add_field(name="–ò–º—è:", value=f"{fake.name()}", inline=False)
    embed.add_field(name="–ü—Ä–æ—Ñ–µ—Å—Å–∏—è:", value=f"{fake.job()}", inline=False)
    embed.add_field(name="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:", value=f"{fake.phone_number()}", inline=False)
    embed.add_field(name="–≠–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å: ", value=f"{fake.free_email()}", inline=False)
    embed.add_field(name="–ê–¥—Ä–µ—Å:", value=f"{fake.address()}", inline=False)
    embed.add_field(name="–î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è:", value=f"{fake.date_of_birth()}", inline=False)
    embed.add_field(name="–¶–≤–µ—Ç –≤–æ–ª–æ—Å:", value=f"{fake.color_name()}", inline=False)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed)

@fake.command(aliases=["–∫–∞—Ä—Ç–∞"])
async def card(ctx):
    fake = Faker('ru_RU')
    fake_balance = random.randint(1, 48000)
    embed = discord.Embed(title="–†–∞–Ω–¥–æ–º–Ω–∞—è –±–∞–Ω–∫–æ–≤—Å–∫–∞—è –∫–∞—Ä—Ç–∞ üí≥", color=bot_color)
    embed.add_field(name="–í–ª–∞–¥–µ–ª–µ—Ü:", value=f"{fake.name()}", inline=False)
    embed.add_field(name="–ë–∞–ª–∞–Ω—Å:", value=f"{fake_balance}$")
    embed.add_field(name="–î–∞—Ç–∞:", value=f"{fake.credit_card_expire()}", inline=True)
    embed.add_field(name="–ù–æ–º–µ—Ä:", value=f"{fake.credit_card_number()}", inline=False)
    embed.add_field(name="–ë–∞–Ω–∫: ", value=f"{fake.bank()}")
    embed.add_field(name="–ü–ª–∞—Ç—ë–∂–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞:", value=f"{fake.credit_card_provider()}")
    embed.set_thumbnail(url="https://img.icons8.com/plasticine/400/sim-card-chip.png")
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed)

@fake.command(aliases=["–Ω–∏—Ç—Ä–æ"])
async def nitro(ctx):
    link = ["https://discord.gift/svdKDpakdma", "https://discord.gift/ApdmlOnSia", "https://discord.gift/daUmepWE", "https://discord.gift/LdopEparw", "https://discord.gift/wERPdafgu", "https://discord.gift/giEpdatda", "https://discord.gift/LsnIanpa", "https://discord.gift/PkakcYXsi"]
    links = random.choice(link)
    embed = discord.Embed(title="–ü–æ–¥–∞—Ä–æ–∫ –Ω–∏—Ç—Ä–æ!", description=f"{links}", color=discord.Color.from_rgb(244,127,255))
    embed.set_image(url="https://images-ext-2.discordapp.net/external/gZ5wyrZMyP_UpEPpR-o7tdkSkNnlukgCerl8ihjYOME/https/images-ext-2.discordapp.net/external/fsLiBhigfy4QCCbL0ggphzfPyeaIll0nmNvcE5zlXec/https/media.discordapp.net/attachments/862030971305328643/865320983086628905/xedy9ugkqo621.png")
    await ctx.message.delete()
    await ctx.send(embed=embed)

@fake.command(aliases=["–±—É—Å—Ç"])
async def boost(ctx):
    embed = discord.Embed(title=f"<a:boost:965238386409500692> –£—Ä–∞! {ctx.author.name} –ë—É—Å—Ç–∏—Ç –Ω–∞—à —Å–µ—Ä–≤–µ—Ä!", color=discord.Color.from_rgb(255,114,250))
    embed.set_image(url="https://images-ext-1.discordapp.net/external/qg5eaY5TezymGxulK6BjGBgbsCoBWV2nLrKlAa_-n88/https/images-ext-2.discordapp.net/external/r48TtXE-ZgPEHtp04IEXXflGAjVYYkA-950-glMywIc/https/images-ext-1.discordapp.net/external/dlWfg-4OjgObnG_H4ARXMAM0w5S_1IrvIxsjYQMTN1M/https/media.discordapp.net/attachments/897123699914838106/900705333893275718/6gdSqO8.gif")
    await ctx.message.delete()
    await ctx.send(embed=embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.command()
async def emoji(ctx, emoji: discord.Emoji):
        embed = discord.Embed(title=f"–ö–æ–º–∞–Ω–¥–∞: –≠–º–æ–¥–∑–∏", description=f"**–≠–º–æ–¥–∑–∏ –∏–Ω—Ñ–æ:**\n**–ù–∞–∑–≤–∞–Ω–∏–µ —ç–º–æ–¥–∑–∏:** {emoji.name}\n**Id —ç–º–æ–¥–∑–∏:** {emoji.id}\n**–ê–Ω–∏–º–∞—Ü–∏—è:** {emoji.animated}\n**–≠–º–æ–¥–∑–∏:** {emoji}\n**[–°–∫–∞—á–∞—Ç—å üîó]({emoji.url})**", color=bot_color)#{emoji.name}\nId —ç–º–æ–¥–∑–∏: {emoji.id}\n–≠–º–æ–¥–∑–∏: {emoji}
        embed.set_image(url=emoji.url)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed=embed)

@client.command()
async def deleteemoji(ctx, emoji: discord.Emoji):
	guild = ctx.guild
	if ctx.author.guild_permissions.manage_emojis:
		await ctx.reply(f'Successfully deleted (or not): {emoji}')
		await emoji.delete()
       
#-------------------------------------------------------------------------------------------------------------
#----------------------------------------------—É–∫—É—Å–∏—Ç—å--------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–∫—É—Å–∞
async def bite(ctx,member:discord.Member):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: –∫—É—Å—å', description='{}, —É–∫—É—Å–∏–ª {}. –ê –µ—Å–ª–∏ –±—ã –æ—Ç–∫—É—Å–∏–ª üò±'.format(ctx.message.author.mention,member.mention), colour = discord.Color.from_rgb(255, 255, 255))
    bite=['https://i.pinimg.com/originals/db/e3/48/dbe348e338fc03973a5f4f4f14f92b9d.gif', 'https://c.tenor.com/4j3hMz-dUz0AAAAC/anime-love.gif']
    embed.set_image(url=random.choice(bite))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#----------------------------------------------–ª–∞—Å–∫–∞—Ç—å--------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ª–∞—Å–∫–∞–Ω–∏–π
async def caress(ctx,member:discord.Member):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: –ª–∞—Å–∫–∞—Ç—å', description='{}, –ª–∞—Å–∫–∞–µ—Ç {}. –ú–∏–ª–æ—Ç–∞))'.format(ctx.message.author.mention,member.mention), colour = discord.Color.from_rgb(240, 129, 160))
    caress=['https://c.tenor.com/DzmjDubvoi8AAAAd/anime-caress.gif', 
    'https://64.media.tumblr.com/6d4e50d3a62e5a90500eadc0537843b2/tumblr_mkiknpSJxF1rbtx3po1_500.gif']
    embed.set_image(url=random.choice(caress))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#---------------------------------------------–∑–∞—Å–º—É—â–∞—Ç—å—Å—è-----------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞—Å–º—É—â–µ–Ω–∏—è
async def confuse(ctx):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: —Å–º—É—â–µ–Ω–∏–µ', description='{}, –∑–∞—Å–º—É—â–∞–ª—Å—è —ç—Ç–æ —Ç–∞–∫ –º–∏–ª–æ'.format(ctx.message.author.mention), colour = discord.Color.from_rgb(98, 228, 250))
    confuse=['https://thumbs.gfycat.com/NauticalDeliciousFowl-size_restricted.gif'
    ]
    embed.set_image(url=random.choice(confuse))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#----------------------------------------------–ø–ª–∞–∫–∞—Ç—å--------------------------------------------------------


@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–ª–∞–∫–∞–Ω—å—è
async def cry(ctx):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: –ø–ª–∞—á', description='{}, –ø–∞–ª—á–µ—Ç. –ú–æ–∂–µ—Ç —á–µ–º –Ω–∏–±—É–¥—å –ø–æ–º–æ—á—å?'.format(ctx.message.author.mention), colour = discord.Color.from_rgb(68, 250, 234))
    cry=['https://c.tenor.com/YM3fW1y6f8MAAAAC/crying-cute.gif', 
    'http://static.tumblr.com/fmikcqz/7Allyi1ls/anime_cry_sad_rain.gif', 'https://c.tenor.com/k2SKe36YwIUAAAAC/crying-girl.gif', 
    'https://www.techjunkie.com/wp-content/uploads/2018/03/Anime-Gif-with-Sad-Face-1.gif', 'https://c.tenor.com/gDk49oAcW9QAAAAd/anime-cry-cry.gif']
    embed.set_image(url=random.choice(cry))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#---------------------------------------------—Ç–∞–Ω—Ü–µ–≤–∞—Ç—å-------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–ª–∞–∫–∞–Ω—å—è
async def dance(ctx):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: —Ç–∞–Ω–µ—Ü', description='–ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –∫–∞–∫ –∫—Ä–∞—Å–∏–≤–æ —Ç–∞–Ω—Ü—É–µ—Ç {}'.format(ctx.message.author.mention), colour = discord.Color.from_rgb(83, 224, 118))
    dance=['https://media2.giphy.com/media/euMGM3uD3NHva/200.gif', 
    'https://aniyuki.com/wp-content/uploads/2021/05/aniyuki-anime-dance-gif-28.gif']
    embed.set_image(url=random.choice(dance))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------–°–∞–º–æ—É–±–∏–π—Å—Ç–≤–æ------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å—É–∏—Ü–∏–¥
async def suicide(ctx):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: —Ç–≤–æ—è –º–∞—Ç—å —à–ª—é—Ö–∞', description='–ù–µ—Ç {} –ø–æ—á–µ–º—É —Ç—ã —ç—Ç–æ —Å–¥–µ–ª–∞–ª(–∞)? üò≠üò≠üò≠'.format(ctx.message.author.mention), colour = discord.Color.from_rgb(0, 0, 0))
    suicide=['https://c.tenor.com/OdehztbrpecAAAAC/anime-falling.gif', 
    'https://i.gifer.com/F5Ai.gif']
    embed.set_image(url=random.choice(suicide))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#----------------------------------------------1000-7---------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è 1000-7
async def dead_inside(ctx):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: –¥–µ–¥ –∏–Ω—Å–∞–π–¥.......', description='{}, 1000-7'.format(ctx.message.author.mention), colour = discord.Color.from_rgb(0, 0, 0))
    dead_inside=['https://c.tenor.com/CCE66BvfC38AAAAC/tokyo-ghoul-ken-watanabe.gif']
    embed.set_image(url=random.choice(dead_inside))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#-----------------------------------------------–ø–∏—Ç—å----------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø–æ—è
async def drink(ctx):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: –ø–∏—Ç—å', description='{}, —Å–ø–∏–ª—Å—è –æ—Ç –¥–∞—É–Ω))'.format(ctx.message.author.mention), colour = discord.Color.from_rgb(240, 238, 91))
    drink=['https://c.tenor.com/SEoWK3bFonUAAAAd/anime-beer.gif', 
    'https://i.pinimg.com/originals/c1/a2/da/c1a2daf389b14a2f14abfdb9bcda8b6a.gif']
    embed.set_image(url=random.choice(drink))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#----------------------------------------------–∫—É–∞—à—Ç—å---------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –µ–¥—ã
async def eat(ctx):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: –∫—É—à–∞—Ç—å', description='{}, —Å–æ–≤—Å–µ–º –∑–∞–∂—Ä–∞–ª—Å—è'.format(ctx.message.author.mention), colour = discord.Color.from_rgb(240, 238, 91))
    eat=['https://i.gifer.com/5HsF.gif', 'https://animesher.com/orig/1/149/1495/14951/animesher.com_eat-gif-birthday-1495177.gif', 
    'https://64.media.tumblr.com/5858fdafbc60c682aa585d3937f7c816/tumblr_inline_p7l32k75ck1v3eowb_540.gifv', 'https://giffiles.alphacoders.com/196/196155.gif',
    'https://i.kym-cdn.com/photos/images/original/001/107/679/b59.gif']
    embed.set_image(url=random.choice(eat))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#--------------------------------------------—É–¥–∞—Ä–∏—Ç—å----------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —É–¥–∞—Ä–∞
async def hit(ctx,member:discord.Member):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: –≤—ä–µ–±–∞—Ç—å', description='{}, —É–¥–∞—Ä–∏–ª {} üò±üò±üò±'.format(ctx.message.author.mention,member.mention), colour = discord.Color.from_rgb(0, 0, 0))
    hit=['https://c.tenor.com/FJsjk_9b_XgAAAAC/anime-hit.gif', 'https://i.gifer.com/9Ky5.gif', 'https://data.whicdn.com/images/267081888/original.gif']
    embed.set_image(url=random.choice(hit))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#---------------------------------------------–æ–±–Ω—è—Ç—å----------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ–±–Ω–∏–º–∞—à–µ–∫
async def hug(ctx,member:discord.Member):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: –æ–±–Ω—è—Ç—å', description='{}, –æ–±–Ω—è–ª(–∞) {}. –ö–∞–∫ —ç—Ç–æ –º–∏–ª–æ'.format(ctx.message.author.mention,member.mention), colour = discord.Color.from_rgb(240, 150, 57))
    hug=['https://i.imgur.com/mk1tSAH.gif', 'https://64.media.tumblr.com/988a4660509af669515a40fd2ee38ada/b6806f9e566d4b2e-1d/s1280x1920/e0827aed786d0eeed23689dc320940b108c4305a.gif', 
    'https://c.tenor.com/cFhjNVecNGcAAAAC/anime-hug.gif']
    embed.set_image(url=random.choice(hug))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------—Ä–∞–¥–æ–≤–∞—Ç—å—Å—è--------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–∞–¥–æ—Å—Ç–∏
async def joy(ctx):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è', description='–£ {} –≤—Å—ë –∑–∞–µ–±–∏—Å—å –∏ –µ–º—É(–µ–π) –Ω–∞ –≤—Å–µ—Ö –ø–æ—Ö—É–π'.format(ctx.message.author.mention), colour = discord.Color.from_rgb(240, 232, 69))
    joy=['https://i.pinimg.com/originals/68/53/45/685345402b067d8ced595481f8aa23da.gif', 
    'https://c.tenor.com/nBWlYPbKxzwAAAAC/anime-happy.gif']
    embed.set_image(url=random.choice(joy))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------–ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å—Å—è------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ—Ü–µ–ª—É–µ–≤
async def kiss(ctx,member:discord.Member):
    embed=discord.Embed(description='{}, –∫–∞–∂–µ—Ç—Å—è —Ç–µ–±—è –ø–æ—Ü–µ–ª–æ–≤–∞–ª(–∞) {}. –ß—Ç–æ —ç—Ç–æ –º–æ–≥–ª–æ –±—ã –∑–Ω–∞—á–∏—Ç—å!? „ÉΩ(¬∞‚ñ°¬∞ )„Éé'.format(member.mention,ctx.message.author.mention), colour = discord.Color.from_rgb(235, 104, 237))
    kisses=['https://i.pinimg.com/originals/aa/18/c7/aa18c72b11f908963b33f4dced6ec88f.gif'
    ,'https://images.gr-assets.com/hostedimages/1604779980ra/30348890.gif', 'https://data.whicdn.com/images/356434547/original.gif']
    embed.set_image(url=random.choice(kisses))
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#---------------------------------------------—Å–º–µ—Ö------------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–º–µ—Ö–∞
async def laugh(ctx):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: –µ–±–∞—Ç—å –≤—ã –ª–æ—à–∞—Ä—ã', description='{} —Å–º–µ—à–Ω–æ —Å –≤–∞—Å'.format(ctx.message.author.mention), colour = discord.Color.from_rgb(240, 232, 69))
    laugh=['https://c.tenor.com/o-q-kqaTzSsAAAAC/anime-laugh.gif', 
    'https://c.tenor.com/tspOBIHclv8AAAAd/nagatoro-anime-laugh.gif']
    embed.set_image(url=random.choice(laugh))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#--------------------------------------------–æ–±–ª–∏–∑–∞—Ç—å---------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ–±–ª–∏–∑—ã–≤–∞–Ω–∏–π —á–ª–µ–Ω–∞
async def lick(ctx,member:discord.Member):
    embed=discord.Embed(title='–û–±–ª–∏–∑–∞—Ç—å', description='{} –æ–±–ª–∏–∑–∞–ª(a) {} –ø–æ—Ö–æ–¥—É –æ–Ω(–∞) –ø–æ–¥—É–º–∞–ª(–∞) —á—Ç–æ —ç—Ç–æ —á–ª–µ....'.format(ctx.message.author.mention,member.mention), colour = discord.Color.from_rgb(240, 140, 149))
    lick=['https://c.tenor.com/Go7wnhOWjSkAAAAC/anime-lick-face.gif'
    ,'https://images-ext-2.discordapp.net/external/JQKVMz6BGC_onN9f1FE6CIy5uI9g4goUSzkEYcN6Q7g/https/i.imgur.com/SoNfzBt.gif']
    embed.set_image(url=random.choice(lick))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#----------------------------------------–ø—Ä–∏–∑–Ω–∞–Ω–∏–µ-–≤-–ª—é–±–≤–∏----------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–∏–∑–Ω–∞–Ω–∏–π –≤ –ª—é–±–≤–∏
async def lover(ctx,member:discord.Member):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: –ø—Ä–∏–∑–Ω–∞—Ç—å—Å—è –≤ –ª—é–±–≤–∏', description='{} –ø—Ä–∏–∑–Ω–∞–ª—Å—è(–ª–∞—Å—è) –≤ –ª—é–±–≤–∏ {}'.format(ctx.message.author.mention,member.mention), colour = discord.Color.from_rgb(240, 140, 149))
    love=['https://giffiles.alphacoders.com/188/188468.gif'
    ,'https://c.tenor.com/rS045JX-WeoAAAAC/anime-love.gif']
    embed.set_image(url=random.choice(love))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#---------------------------------------------—Å–∫—É—á–∞—Ç—å---------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–∫—É—á–∞—Ç—å
async def miss(ctx):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: —Å–∫—É—á–∞—Ç—å', description='{} —Å–∫—É—á–∞–µ—Ç –º–æ–∂–µ—Ç –ø–æ–∏–≥—Ä–∞–µ–º —Å –Ω–∏–º(–Ω–µ–π)?'.format(ctx.message.author.mention), colour = discord.Color.from_rgb(66, 67, 69))
    miss=['https://animesher.com/orig/1/115/1156/11562/animesher.com_animes--anime-gif-1156289.gif', 'https://c.tenor.com/gaxGj7lADG8AAAAC/anime-girl-anime.gif']
    embed.set_image(url=random.choice(miss))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#---------------------------------------------–ø–æ–≥–ª–∞–¥–∏—Ç—å-------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–≥–ª–∞–¥–∏—Ç—å
async def pat(ctx,member:discord.Member):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: –ø–æ–≥–ª–∞–¥–∏—Ç—å', description='{} –ø–æ–≥–ª–∞–¥–∏–ª(–∞) {} –≠—Ç–æ —Ç–∞–∫ –º–∏–ª–æ UwU'.format(ctx.message.author.mention,member.mention), colour = discord.Color.from_rgb(240, 140, 149))
    pat=['https://c.tenor.com/jEfC8cztigIAAAAC/anime-pat.gif'
    ,'https://i.pinimg.com/originals/d7/c3/26/d7c326bd43776f1e0df6f63956230eb4.gif']
    embed.set_image(url=random.choice(pat))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)


#-------------------------------------------------------------------------------------------------------------
#-----------------------------------------------—Ç—ã–∫–Ω—É—Ç—å-------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç—ã–∫–Ω—É—Ç—å
async def poke(ctx,member:discord.Member):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: —Ç—ã–∫–Ω—É—Ç—å', description='{} –≤—Å—Ç–∞–≤–∏–ª(–∞) –ø–∞–ª—å—á–∏–∫ –≤ –∞–Ω–∞–ª—å—á–∏–∫ {} '.format(ctx.message.author.mention,member.mention), colour = discord.Color.from_rgb(240, 140, 149))
    poke=['https://c.tenor.com/3dOqO4vVlr8AAAAC/poke-anime.gif'
    ,'https://i.pinimg.com/originals/f1/6d/16/f16d16a4ac88a59168916ddfd62b49dd.gif', 'https://c.tenor.com/NjIdfk7i3bsAAAAC/poke-poke-poke.gif', 'https://i.pinimg.com/originals/b4/95/fb/b495fb19f4b9a1b04f48297b676c497b.gif']
    embed.set_image(url=random.choice(poke))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#------------------------------------------------—Ä—ç–ø-–±–∞—Ç–ª-----------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç—ã–∫–Ω—É—Ç—å
async def rap(ctx,member:discord.Member):
    embed=discord.Embed(title='–ü—Ä—É—Ñ—ã: –º–∞—Ç—å —Ç–≤–æ—é –µ–±–∞–ª(–∞)', description='{} —Ä–∞—Å–∫–∏–¥–∞–ª(–∞) {} –ø–æ —Ñ–∞–∫—Ç–∞–º'.format(ctx.message.author.mention,member.mention), colour = discord.Color.from_rgb(0,0,0))
    rap=['https://media.giphy.com/media/xpJibZRfyb8GchlkVL/giphy.gif']
    embed.set_image(url=random.choice(rap))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#-----------------------------------------------–≤–æ—Å–∫—Ä–µ—Å–Ω—É—Ç—å---------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤–æ—Å–∫—Ä–µ—Å–Ω—É—Ç—å
async def resurrected(ctx):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: –≤–æ—Å–∫—Ä–µ—Å–Ω—É—Ç—å', description='{} –≤–æ—Å–∫—Ä–µ—Å(–ª–∞)... –æ–Ω(–∞) –∞–Ω–≥–µ–ª –∏–ª–∏ –¥–µ–¥ –∏–Ω—Å–∞–π–¥?'.format(ctx.message.author.mention), colour = discord.Color.from_rgb(66, 67, 69))
    resurrected=['https://c.tenor.com/xAWRN4fLcoIAAAAC/resurrect-anime.gif']
    embed.set_image(url=random.choice(resurrected))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------–±–µ–∂–∞—Ç—å------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –±–µ–∂–∞—Ç—å
async def run(ctx):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: –±–µ–∂–∞—Ç—å', description='{} —Å—ä–µ–±–∞–ª—Å—è'.format(ctx.message.author.mention), colour = discord.Color.from_rgb(118, 209, 245))
    run=['https://media0.giphy.com/media/JRlqKEzTDKci5JPcaL/giphy.gif', 'https://media.discordapp.net/attachments/937397780287205383/944665283245797376/20220219_194146.gif']
    embed.set_image(url=random.choice(run))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------–≥—Ä—É—Å—Ç–∏—Ç—å----------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≥—Ä—É—Å—Ç–∏—Ç—å
async def sad(ctx):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: –≥—Ä—É—Å—Ç–∏—Ç—å', description='{} –≥—Ä—É—Å—Ç–∏—Ç(. –ú–æ–∂–µ—Ç —Ä–∞—Å—Å–∫–∞–∂–µ–º –µ–º—É –∞–Ω–µ–∫–¥–æ—Ç?'.format(ctx.message.author.mention), colour = discord.Color.from_rgb(66, 67, 69))
    sad=['https://i.pinimg.com/originals/0e/93/51/0e9351b77fab4bf407f16a6d7e82168c.gif']
    embed.set_image(url=random.choice(sad))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)


#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------–≤—ã–µ–±–∞—Ç—å---------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–µ–±–∞—Ç—å
async def sex(ctx, member:discord.Member):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: —Å–µ–∫—Å', description='{} –∑–∞–Ω—è–ª—Å—è —Å–µ–∫—Å–æ–º —Å {}'.format(ctx.message.author.mention,member.mention), colour = discord.Color.from_rgb(228, 209, 189))
    sex=['https://64.media.tumblr.com/3e373d2bf62191ed0418c8746c159258/tumblr_nmsjpbKMuX1u35cjio1_400.gif'
    ,'https://64.media.tumblr.com/745db81614f8c953463949e2abc543ef/tumblr_nnsja9hiHT1u35cjio1_500.gif']
    embed.set_image(url=random.choice(sex))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#--------------------------------------------------—â–µ–ª–±–∞–Ω-----------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã–µ–±–∞—Ç—å
async def slit(ctx,member:discord.Member):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: —â–µ–ª–±–∞–Ω', description='{} –¥–∞–ª —â–µ–ª–±–∞–Ω {}'.format(ctx.message.author.mention,member.mention), colour = discord.Color.from_rgb(228, 209, 189))
    slit=['https://anime-chan.me/uploads/posts/2015-06/1434639333_tumblr_nq3tforHq61tga1sco1_540.gif', 'https://anime-chan.me/uploads/posts/2016-10/1475612990_tumblr_oegx5uSUV31s4qvrdo1_540.gif', 
    'https://anime-chan.me/uploads/posts/2017-09/1504922382_tumblr_otrc2pLfJk1u86t2qo1_500.gif']
    embed.set_image(url=random.choice(slit))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#--------------------------------------------------—à–æ–∫--------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —à–æ–∫
async def shock(ctx):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: —à–æ–∫', description='{} –≤ —à–æ–∫–µ!'.format(ctx.message.author.mention), colour = discord.Color.from_rgb(255, 255, 255))
    shock=['https://c.tenor.com/YIkb2YT9xFwAAAAC/anime-hitoribocchi.gif'
    ,'https://media1.giphy.com/media/zgGrSqSi3SSqs/200.gif', 'https://c.tenor.com/xD13KGAQC_0AAAAC/noragami-anime.gif']
    embed.set_image(url=random.choice(shock))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#--------------------------------------------–≤—ã—Å—Ç—Ä–µ–ª—å–Ω—É—Ç—å-----------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ã—Å—Ç—Ä–µ–ª—å–Ω—É—Ç—å
async def shot(ctx,member:discord.Member):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: –≤—ã—Å—Ç—Ä–µ–ª—å–Ω—É—Ç—å', description='{} –≤—ã—Å—Ç—Ä–µ–ª–∏–ª(–∞) –≤ {}. –û–Ω(–∞) —Å–¥–æ—Ö(–ª–∞)!? üò±üò≠'.format(ctx.message.author.mention,member.mention), colour = discord.Color.red())
    shot=['https://i.imgur.com/VqJlRR8.gif'
    ,'https://c.tenor.com/9G79MZldUhMAAAAd/anime-gun.gif']
    embed.set_image(url=random.choice(shot))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#---------------------------------------------–ø–æ—â–µ—á–∏–Ω–∞-------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ—â–µ—á–∏–Ω–∞
async def slap(ctx,member:discord.Member):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: –ø–æ—â–µ—á–∏–Ω–∞', description='{} –¥–∞–ª –ø–æ—â–µ—á–∏–Ω—É {}. –¢–µ–±–µ –±–æ–ª—å–Ω–æ?'.format(ctx.message.author.mention,member.mention), colour = discord.Color.from_rgb(240, 140, 149))
    slap=['https://media4.giphy.com/media/Zau0yrl17uzdK/giphy.gif'
    ,'https://i.imgur.com/fm49srQ.gif?noredirect', 'https://c.tenor.com/rVXByOZKidMAAAAd/anime-slap.gif']
    embed.set_image(url=random.choice(slap))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#----------------------------------------------—Å–ø–∞—Ç—å----------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–ø–∞—Ç—å
async def sleep(ctx):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: —Å–ø–∞—Ç—å', description='{} —Å–ø–∏—Ç. –ß—Ç–æ –µ–º—É(–µ–π) —Å–Ω–∏—Ç—Å—è? üåô‚≠ê'.format(ctx.message.author.mention), colour = discord.Color.from_rgb(138, 195, 230))
    sleep=['https://acegif.com/wp-content/gif/anime-sleep-2.gif'
    ,'https://acegif.com/wp-content/gif/anime-sleep-37.gif']
    embed.set_image(url=random.choice(sleep))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#----------------------------------------------–∫—É—Ä–∏—Ç—å---------------------------------------------------------

@client.command(pass_context=True)#–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∫—É—Ä–∏—Ç—å
async def smoke(ctx):
    embed=discord.Embed(title='–†–µ–∞–∫—Ü–∏—è: –∫—É—Ä–∏—Ç—å', description='{} –∑–∞–∫—É—Ä–∏–ª... –º–æ–∂–µ—Ç –Ω–µ —Å—Ç–æ–∏—Ç?'.format(ctx.message.author.mention), colour = discord.Color.from_rgb(92, 46, 0))
    smoke=['https://media3.giphy.com/media/7ERB0iMcJLaAQFg06Z/giphy.gif']
    embed.set_image(url=random.choice(smoke))
    embed.set_author( name = ctx.message.author.name, icon_url = ctx.message.author.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.message.delete()
    await ctx.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.command()
async def cube(ctx):
  d = random.randint(0, 5)
  if d == 0:
    embed_0 = discord.Embed(title=f"{ctx.author.name}, –∫–∏–Ω—É–ª –∫–æ—Å—Ç—å", description="–ï–º—É –≤—ã–ø–∞–ª `1`", color = bot_color)
    embed_0.set_image(url="https://media.discordapp.net/attachments/929051187364392963/934154132670013530/Picsart_22-01-21_23-27-48-717.jpg")
    embed_0.timestamp = datetime.datetime.utcnow()
    embed_0.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed_0)
  if d == 1:
    embed_1 = discord.Embed(title=f"{ctx.author.name}, –ø–æ–¥–∫–∏–Ω—É–ª –∫–æ—Å—Ç—å", description="–ï–º—É –≤—ã–ø–∞–ª–æ `2`", color = bot_color)
    embed_1.set_image(url="https://media.discordapp.net/attachments/929051187364392963/934154132913274950/Picsart_22-01-21_23-28-46-761.jpg")
    embed_1.timestamp = datetime.datetime.utcnow()
    embed_1.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed_1)
  if d == 2:
    embed_2 = discord.Embed(title=f"{ctx.author.name}, –∫–∏–Ω—É–ª –∫–æ—Å—Ç—å", description="–ï–º—É –≤—ã–ø–∞–ª `3`", color = bot_color)
    embed_2.set_image(url="https://media.discordapp.net/attachments/929051187364392963/934154133399826452/Picsart_22-01-21_23-30-48-924.jp")
    embed_2.timestamp = datetime.datetime.utcnow()
    embed_2.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed_2)
  if d == 3:
    embed_3 = discord.Embed(title=f"{ctx.author.name}, –ø–æ–¥–∫–∏–Ω—É–ª –∫–æ—Å—Ç—å", description="–ï–º—É –≤—ã–ø–∞–ª–æ `4`", color = bot_color)
    embed_3.set_image(url="https://media.discordapp.net/attachments/929051187364392963/934154133668253696/Picsart_22-01-21_23-31-28-515.jpg")
    embed_3.timestamp = datetime.datetime.utcnow()
    embed_3.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed_3)
  if d == 4:
    embed_4 = discord.Embed(title=f"{ctx.author.name}, –∫–∏–Ω—É–ª –ø–ª–æ—Ç–Ω—É—é –∑–∏–≥—É", description="–ï–º—É –≤—ã–ø–∞–ª `5`", color = bot_color)
    embed_4.set_image(url="https://media.discordapp.net/attachments/929051187364392963/934154133903138816/Picsart_22-01-21_23-33-42-872.jpg")
    embed_4.timestamp = datetime.datetime.utcnow()
    embed_4.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed_4)
  if d == 5:
    embed_5 = discord.Embed(title=f"{ctx.author.name}, –ø–æ–¥–∫–∏–Ω—É–ª –∫–æ—Å—Ç—å", description="–ï–º—É –≤—ã–ø–∞–ª–æ `6`", color = bot_color)
    embed_5.set_image(url="https://media.discordapp.net/attachments/929051187364392963/934154134150594591/Picsart_22-01-21_23-34-37-760.jpg")
    embed_5.timestamp = datetime.datetime.utcnow()
    embed_5.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed_5)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.command(aliases=["–ø–µ—Å–Ω—è"])
async def lyrics(ctx, *, zapros=None):
    if zapros is None:
        await ctx.reply("–í–≤–µ–¥–∏—Ç–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç –ø–µ—Å–Ω–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞")
    else:
        reponse = requests.get(f"https://some-random-api.ml/lyrics?title={zapros}")
        otv = reponse.json()
        try:
            embed=discord.Embed(title="–¢–µ–∫—Å—Ç", url=f"{otv['links']['genius']}", description=otv['lyrics'], color=bot_color)
            embed.set_author(name=f"{otv['author']} - {otv['title']}")
            embed.set_thumbnail(url=f"{otv['thumbnail']['genius']}")
            embed.timestamp = datetime.datetime.utcnow()
            embed.set_footer(text=f'{ctx.author.name} \u200b')
            await ctx.reply(embed=embed)
        except:
            await ctx.reply("–ü–µ—Å–Ω—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.command()
async def achievement(ctx, *, text):
    text1 = text
    if len(text1) >= 30:
        # –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        await ctx.reply(embed = discord.Embed(description = f'–î–ª–∏–Ω–∞ —Ç–µ–∫—Å—Ç–∞ –Ω–µ –¥–æ–ª–∂–Ω–∞ –ø—Ä–µ–≤—ã—à–∞—Ç—å `30` —Å–∏–º–≤–æ–ª–æ–≤', color = bot_color))
        # –∏—Å–ø–æ–ª—å–∑—É–µ–º return, —á—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å —Ñ—É–Ω–∫—Ü–∏—é
        return
    else:
        achievement = Image.open("img/achievement.png")
        colors = ["white"]
        drawer = ImageDraw.Draw(achievement)
        font = ImageFont.truetype("fonts/MinecraftRegular-Bmg3.otf", 15)
        for color in colors:
            drawer.text((60, 35), text=text1, font=font, fill=color)

        achievement.save("img/exit_achievement.png")
        #achievement.show()

        file = discord.File("img/exit_achievement.png", filename="exit_achievement.png")
        #embed = discord.Embed(color = discord.Colour.gold())
        embed = discord.Embed(title = '–î–æ—Å—Ç–∏–∂–µ–Ω–∏–µ', description = '–ü–æ–ª—É—á–µ–Ω–æ –Ω–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!', color = bot_color)
        embed.set_image(url="attachment://exit_achievement.png")
        await ctx.reply(file = file, embed = embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

obj = qr.QRCode(  
    version = 1,  
    error_correction = qr.constants.ERROR_CORRECT_L,  
    box_size = 10,  
    border = 4,  
)  

@client.command(aliases=["qr"])
async def qrcode(ctx, *, text):
        obj.add_data(text)
        img = obj.make_image(fill_color = "cyan", back_color = "black")  
        img.save("img/qrcode.png")
        embed = discord.Embed(title="QRcode", description = '–í–æ—Ç –≤–∞—à QRcode:', color = bot_color)
        qrcode = discord.File("img/qrcode.png", filename="qrcode.png")
        embed.set_image(url="attachment://qrcode.png")
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        #qrcode = os.remove("img/qrcode.png")
        await ctx.reply(file = qrcode, embed = embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.group(invoke_without_command = True, aliases=["–∫–æ–¥–µ—Ä"])
async def coder(ctx):
    await ctx.message.reply(f"{ctx.author.name}, —Ç–∏–ø –∫–æ–¥–µ—Ä–æ–≤–∫–∏ –Ω–µ —É–∫–∞–∑–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–∑–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –ø–æ–º–æ—â–∏ (`{bot_prefix}help coder`)")

@coder.command()
async def base64(ctx, *, text):

        sample_string = text
        sample_string_bytes = sample_string.encode("ascii")
  
        base64_bytes = bas64.b64encode(sample_string_bytes)
        base64_string = base64_bytes.decode("ascii")

        embed = discord.Embed(title="–ö–æ–¥–µ—Ä Base64", description = f"> {base64_string}", color = bot_color)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed = embed)

@client.group(invoke_without_command = True, aliases=["–¥–µ–∫–æ–¥–µ—Ä"])
async def decoder(ctx):
    await ctx.message.reply(f"{ctx.author.name}, —Ç–∏–ø –¥–µ–∫–æ–¥–µ—Ä–æ–≤–∫–∏ –Ω–µ —É–∫–∞–∑–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–∑–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –ø–æ–º–æ—â–∏ (`{bot_prefix}help decoder`)")

@decoder.command()
async def base64(ctx, *, text):

        sample_string = text
        sample_string_bytes = sample_string.encode("ascii")
  
        base64_bytes = bas64.b64decode(sample_string_bytes)
        base64_string = base64_bytes.decode("ascii")

        embed = discord.Embed(title="–î–µ–∫–æ–¥–µ—Ä Base64", description = f"> {base64_string}", color = bot_color)
        embed.timestamp = datetime.datetime.utcnow()
        embed.set_footer(text=f'{ctx.author.name} \u200b')
        await ctx.reply(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.command()
async def math_game(ctx):
    math = str(random.randint(1, 50)) + random.choice(list('+-*')) + str(random.randint(1, 50))
    embed = discord.Embed(title="–ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –∏–≥—Ä–∞", description=f"–°–∫–æ–ª—å–∫–æ –±—É–¥–µ—Ç `{math}`? \n –ù–∞ –æ—Ç–≤–µ—Ç –¥–∞—ë—Ç—Å—è 10 —Å–µ–∫—É–Ω–¥", color=bot_color)
    await ctx.reply(embed=embed)
    msg = await client.wait_for('message', timeout = 10)
    if msg.content == str(eval(math)):
        embed = discord.Embed(title="–í–µ—Ä–Ω–æ!", color=bot_color)
        await msg.reply(embed=embed)
    else:
        embed = discord.Embed(title=f"–ù–µ –≤–µ—Ä–Ω–æ! –û—Ç–≤–µ—Ç: `{str(eval(math))}`", color=bot_color)
        await msg.reply(embed=embed)

@math_game.error
async def game_error(ctx, err):
    embed = discord.Embed(title=f"–í—Ä–µ–º—è –∏—Å—Ç–µ–∫–ª–æ!", color=bot_color)
    await ctx.send(embed=embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.group(invoke_without_command = True, aliases=["—Ä–∏—Å–æ–≤–∞—Ç—å","—Ä–∏—Å–æ–≤–∞–Ω–∏–µ"])
async def draw(ctx):
    await ctx.message.reply(f"{ctx.author.name}, —Ü–≤–µ—Ç —Ä–∏—Å—É–Ω–∫–∞ –Ω–µ —É–∫–∞–∑–∞–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–∑–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –ø–æ–º–æ—â–∏ (`{bot_prefix}help draw`)")

@draw.command(aliases=["–æ—Ä–∞–Ω–∂–µ–≤—ã–π"])
async def orange(ctx):
    embed = discord.Embed(title="–†–∏—Å–æ–≤–∞–Ω–∏–µ üé® | Orange", description=
f"||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||\n"
f"||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||\n"
f"||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||\n"
f"||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||\n"
f"||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||\n"
f"||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||\n"
f"||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||\n"
f"||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||\n"
f"||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||\n"
f"||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||||üüß||\n",
color=bot_color)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed)

@draw.command(aliases=["–∫—Ä–∞—Å–Ω—ã–π"])
async def red(ctx):
    embed = discord.Embed(title="–†–∏—Å–æ–≤–∞–Ω–∏–µ üé® | Red", description=
f"||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||\n"
f"||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||\n"
f"||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||\n"
f"||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||\n"
f"||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||\n"
f"||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||\n"
f"||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||\n"
f"||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||\n"
f"||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||\n"
f"||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||||üü•||\n",
color=bot_color)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed)

@draw.command(aliases=["—Å–∏–Ω–∏–π"])
async def blue(ctx):
    embed = discord.Embed(title="–†–∏—Å–æ–≤–∞–Ω–∏–µ üé® | Blue", description=
f"||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||\n"
f"||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||\n"
f"||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||\n"
f"||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||\n"
f"||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||\n"
f"||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||\n"
f"||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||\n"
f"||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||\n"
f"||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||\n"
f"||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||||üü¶||\n",
color=bot_color)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed)

@draw.command(aliases=["–∑—ë–ª–µ–Ω—ã–π"])
async def green(ctx):
    embed = discord.Embed(title="–†–∏—Å–æ–≤–∞–Ω–∏–µ üé® | Green", description=
f"||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||\n"
f"||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||\n"
f"||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||\n"
f"||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||\n"
f"||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||\n"
f"||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||\n"
f"||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||\n"
f"||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||\n"
f"||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||\n"
f"||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||||üü©||\n",
color=bot_color)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b')
    await ctx.reply(embed=embed)

@draw.command(aliases=["–±–µ–ª—ã–π"])
async def white(ctx):
    embed = discord.Embed(title="–†–∏—Å–æ–≤–∞–Ω–∏–µ üé® | White", description=
f"||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||\n"
f"||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||\n"
f"||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||\n"
f"||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||\n"
f"||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||\n"
f"||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||\n"
f"||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||\n"
f"||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||\n"
f"||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||\n"
f"||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||||‚¨ú||\n",
color=bot_color)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b') 
    await ctx.reply(embed=embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.command()
async def anime(ctx, *, anime_name):
    try:
        anime = animec.Anime(anime_name)
    except:
        await ctx.send(f"–ê–Ω–∏–º–µ `{anime_name}` –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        return
    embed = discord.Embed(title=anime.title_english, description=f"{anime.description[200:]}...", color=bot_color )
    embed.add_field(name="–≠–ø–∏–∑–æ–¥–æ–≤:", value=str(anime.episodes))
    embed.add_field(name="–†–µ–π—Ç–∏–Ω–≥:", value=str(anime.rating))
    embed.add_field(name="–¢—Ä–∞–Ω—Å–ª—è—Ü–∏–∏", value=str(anime.broadcast))
    embed.add_field(name="–°—Ç–∞—Ç—É—Å", value=str(anime.status))
    embed.add_field(name="–¢–∏–ø", value=str(anime.type))
    embed.set_thumbnail(url=anime.poster)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'{ctx.author.name} \u200b') 
    await ctx.message.reply(embed=embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.command()
async def server_news(ctx, *, text):
    embed = discord.Embed(title="–ù–æ–≤–æ—Å—Ç–∏", description=text, color=bot_color )
    embed.set_thumbnail(url=ctx.guild.icon.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'–ù–æ–≤–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞ \u200b') 
    await ctx.message.delete()
    await ctx.send(embed=embed)

@client.command()
async def server_rules(ctx, *, text):
    embed = discord.Embed(title="**__–ü—Ä–∞–≤–∏–ª–∞__**", description="```py\n"+text+"\n```", color=bot_color )
    embed.set_thumbnail(url=ctx.guild.icon.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'–ü—Ä–∞–≤–∏–ª–∞ —Å–µ—Ä–≤–µ—Ä–∞ \u200b') 
    await ctx.message.delete()
    await ctx.send(embed=embed)

@client.command()
async def bot_news(ctx, *, text):
    embed = discord.Embed(title=f"–ù–æ–≤–æ—Å—Ç–∏ {bot_name}", description=text, color=bot_color )
    embed.set_thumbnail(url=client.user.avatar.url)
    embed.timestamp = datetime.datetime.utcnow()
    embed.set_footer(text=f'–ù–æ–≤–æ—Å—Ç–∏ {bot_name} \u200b') 
    await ctx.message.delete()
    await ctx.send(embed=embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

time_window_milliseconds = 5000
max_msg_per_window = 5
author_msg_times = {}
# Struct:
# {
#    "<author_id>": ["<msg_time", "<msg_time>", ...],
#    "<author_id>": ["<msg_time"],
# }

hello_list = "–ü—Ä–∏–≤–µ—Ç","–ø—Ä–∏–≤–µ—Ç","–≠–π —Ö–∞–ª–æ–ø","—ç–π —Ö–∞–ª–æ–ø","Hi","hi","Hello","hello"

@client.event
async def on_message(ctx):
    if ctx.content.startswith("<@831803116071944212>"):
        await ctx.channel.send(f'–ú–æ–π –ø—Ä–µ—Ñ–∏–∫—Å `{bot_prefix}`')
    if ctx.content.startswith(hello_list):
        if not ctx.author.bot:
            await ctx.channel.send(f'–ü—Ä–∏–≤–µ—Ç {ctx.author.name}!')
    global author_msg_counts

    author_id = ctx.author.id
    # Get current epoch time in milliseconds
    curr_time = datetime.datetime.now().timestamp() * 1000

    # Make empty list for author id, if it does not exist
    if not author_msg_times.get(author_id, False):
        author_msg_times[author_id] = []

    # Append the time of this message to the users list of message times
    author_msg_times[author_id].append(curr_time)

    # Find the beginning of our time window.
    expr_time = curr_time - time_window_milliseconds

    # Find message times which occurred before the start of our window
    expired_msgs = [
        msg_time for msg_time in author_msg_times[author_id]
        if msg_time < expr_time
    ]

    # Remove all the expired messages times from our list
    for msg_time in expired_msgs:
        author_msg_times[author_id].remove(msg_time)
    # ^ note: we probably need to use a mutex here. Multiple threads
    # might be trying to update this at the same time. Not sure though.

    if len(author_msg_times[author_id]) > max_msg_per_window:
        await ctx.channel.purge(limit=1)
        embed=discord.Embed(title="–°–ø–∞–º!", description=f"<@{author_id}>, –±—ã–ª –∑–∞–±–∞–Ω–µ–Ω –∑–∞ —Å–ø–∞–º!", color=bot_color)
        await ctx.author.ban(reason="—Å–ø–∞–º")
        await ctx.channel.send(embed=embed)

    await client.process_commands(ctx)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.group(invoke_without_command = True)
async def ticket(ctx):
    await ctx.reply(f"{ctx.author.name}, –≤—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ —Å —Ç–∏–∫–µ—Ç–æ–º. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–∑–æ–≤–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –ø–æ–º–æ—â–∏ (`{bot_prefix}help ticket`)")

@ticket.command(pass_context=True)
#@commands.has_role("ceo")
async def create(ctx):
        #ticket_channel = await guild.create_text_channel(name=f'–¢–∏–∫–µ—Ç„Éª{ctx.author.name}')
        name = '–¢–∏–∫–µ—Ç—ã'
        category = discord.utils.get(ctx.guild.categories, name=name)
        foundchan = discord.utils.get(ctx.guild.text_channels, name=f"—Ç–∏–∫–µ—Ç„Éª{ctx.author.name}")
        if category is None:
            category_create = await ctx.guild.create_category(name)

        if foundchan is None:
            channel = await ctx.guild.create_text_channel(f'—Ç–∏–∫–µ—Ç„Éª{ctx.author.name}', category=category)
            embed = discord.Embed(title=f"–¢–∏–∫–µ—Ç {ctx.author.name}", description=f"{ctx.author.mention}, –≤—ã —Å–æ–∑–∞–¥–∞–ª–∏ —Ç–∏–∫–µ—Ç, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ –º–Ω–æ–≥–æ –∏ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Å–µ—Ä–≤–µ—Ä–∞\n\n–ß—Ç–æ –±—ã –∑–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Å—Ç –Ω–∞–ø–∏—à–∏—Ç–µ `{bot_prefix}ticket close`.", color=bot_color)
            await channel.send(embed=embed)
        if foundchan:
            await ctx.channel.reply("–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–π —Ç–∏–∫–µ—Ç, —á—Ç–æ –±—ã —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –∑–∞–∫—Ä–æ–π—Ç–µ —Å—Ç–∞—Ä—ã–π.")
        Role = discord.utils.get(ctx.guild.roles, name="–¢–∏–∫–µ—Ç")
        if Role is None:
            await ctx.guild.create_role(name="–¢–∏–∫–µ—Ç", color=discord.Color.from_rgb(255, 210, 0))
        else:
            await channel.set_permissions(ctx.author, read_messages=True, send_messages=True, view_channel=True)
            await channel.set_permissions(ctx.guild.default_role, view_channel=False)
            await channel.set_permissions(Role, view_channel=True, send_messages=True, add_reactions=True)
            await category_create.set_permissions(ctx.author, read_messages=True, send_messages=True, view_channel=True)
            await category_create.set_permissions(ctx.guild.default_role, view_channel=False)
            await category_create.set_permissions(Role, view_channel=True, send_messages=True, add_reactions=True)

@ticket.command()
async def close(ctx):
    foundchan = discord.utils.get(ctx.guild.text_channels, name=f"—Ç–∏–∫–µ—Ç„Éª{ctx.author.name}")
    embed = discord.Embed(title=f"–í—ã –∑–∞–∫—Ä—ã–ª–∏ —Ç–∏–∫–µ—Ç", description=f"{ctx.author.mention}, –≤—ã –∑–∞–∫—Ä—ã–ª–∏ —Å–≤–æ–π —Ç–∏–∫–µ—Ç.\n\n–ß—Ç–æ –±—ã –æ—Ç–∫—Ä—ã—Ç—å –µ–≥–æ —Å–Ω–æ–≤–æ –Ω–∞–ø–∏—à–∏—Ç–µ `{bot_prefix}ticket create`", color=bot_color)
    #await discord.Member.send(embed=embed)
    await ctx.author.send(embed=embed)
    await foundchan.delete()

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

def convert(time):
    pos = ["s", "m", "h", "d"]

    time_dict = {"s": 1, "m": 60, "h": 3600, "d": 3600 * 24}

    unit = time[-1]

    if unit not in pos:
        return -1
    try:
        val = int(time[:-1])
    except:
        return -2

    return val * time_dict[unit]


@client.command()
@commands.has_permissions(manage_guild=True)
async def giveaway(ctx, time: str, *, prize: str):
    time = convert(time)

    embed = discord.Embed(title=prize,
                          description=f"–ü—Ä–æ–≤–æ–¥–∏—Ç - {ctx.author.mention}\n –ù–∞–∂–º–∏—Ç–µ –Ω–∞ —Ä–µ–∞–∫—Ü–∏—é üéâ —á—Ç–æ –±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å!\n –ó–∞–∫–æ–Ω—á–∏—Ç—Å—è —á–µ—Ä–µ–∑: **{time}** —Å–µ–∫—É–Ω–¥\n –ü—Ä–∏–∑ - **{prize}**",
                          color=bot_color)#ctx.guild.me.top_role.color

    msg = await ctx.channel.send(content="<a:icon_giveaway:974973075823165450> **GIVEAWAY** <a:icon_giveaway:974973075823165450>", embed=embed)
    await msg.add_reaction("üéâ")

    await asyncio.sleep(3)
    await asyncio.sleep(int(time))

    new_msg = await ctx.channel.fetch_message(msg.id)

    user_list = [user for user in await new_msg.reactions[0].users().flatten() if
                 user != client.user]  # Check the reactions/don't count the bot reaction

    if len(user_list) == 0:
        await ctx.send("–ù–µ—Ç—É —É—á–∞—Å—Ç–≤—É—é—â–∏—Ö.")
    else:
        winner = random.choice(user_list)
        await ctx.send(f"{winner.mention} —Ç—ã –≤—ã–π–≥—Ä–∞–ª **{prize}**!")

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.command()
async def ben(ctx, time: str, *, prize: str):
    time = convert(time)

    msg = embed = discord.Embed(title="–ë–µ–Ω", description=f"–í—ã–±–µ—Ä–∏ –ø—Ä–æ–±–∏—Ä–∫—É –¥–ª—è —Ä–µ–∞–∫—Ü–∏–∏", color=bot_color)#ctx.guild.me.top_role.color
    await ctx.send(embed=embed)
    await msg.add_reaction("")

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

api_key = setting['openweathermap_api_key']
base_url = "http://api.openweathermap.org/data/2.5/weather?"

@client.command()
async def weather(ctx, *, city: str):
    city_name = city
    complete_url = base_url + "appid=" + api_key + "&q=" + city_name
    response = requests.get(complete_url)
    x = response.json()
    channel = ctx.message.channel

    if x["cod"] != "404":
        async with channel.typing():

            y = x["main"]
            current_temperature = y["temp"]
            current_temperature_celsiuis = str(round(current_temperature - 273.15))
            current_pressure = y["pressure"]
            current_humidity = y["humidity"]
            z = x["weather"]
            weather_description = z[0]["description"]

            weather_description = z[0]["description"]
            embed = discord.Embed(title=f"–ü–æ–≥–æ–¥–∞ –≤ {city_name}", color=bot_color)
            embed.add_field(name="–û–ø–∏—Å–∞–Ω–∏–µ", value=f"**{weather_description}**", inline=False)
            embed.add_field(name="–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞(C)", value=f"**{current_temperature_celsiuis}¬∞C** :thermometer:", inline=False)
            embed.add_field(name="–í–ª–∞–∂–Ω–æ—Å—Ç—å(%)", value=f"**{current_humidity}%** :sweat_drops:", inline=False)
            embed.add_field(name="–ê—Ç–º–æ—Å—Ñ–µ—Ä–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ(hPa)", value=f"**{current_pressure}hPa** :cloud:", inline=False)
            embed.set_thumbnail(url="https://i.ibb.co/CMrsxdX/weather.png")    
            embed.timestamp = datetime.datetime.utcnow()
            embed.set_footer(text=f'{ctx.author.name} \u200b') 

            await channel.reply(embed=embed)
    else:
        await channel.reply(f"–ì–æ—Ä–æ–¥ `{city}` –Ω–µ –Ω–∞–π–¥–µ–Ω.")

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.event
async def on_message_delete(message):
    if not message.author.bot:
        if message.channel.guild.id == settings['server_logs']:
            channel = client.get_channel(settings['channel_logs'])
            msg = f"**{message.author.mention}** —É–¥–∞–ª–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ."
            embed = discord.Embed(color = bot_color, description = msg)
            embed.add_field(name = f"**–°–æ–æ–±—â–µ–Ω–∏–µ:**", value = f"{message.content}" + "\u200b")
            embed.add_field(name = f'**–ö–∞–Ω–∞–ª:**', value = f'{message.channel.mention}')
            embed.set_author(name = f"{message.author.name}", icon_url=message.author.avatar.url)
            embed.timestamp = datetime.datetime.utcnow()
            embed.set_footer(text=f'{message.author.name} \u200b') 
            await channel.send(embed = embed)

@client.event
async def on_message_edit(message_before, message_after):
    if not message_before.author.bot:
        if message_before.channel.guild.id == settings['server_logs']:
            channel = client.get_channel(settings['channel_logs'])
            msg = f"**{message_before.author.mention}** –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–ª —Å–æ–æ–±—â–µ–Ω–∏–µ."
            embed = discord.Embed(color = bot_color, description = msg)
            embed.add_field(name = f"**–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ:**", value = f"{message_before.content}" + "\u200b")
            embed.add_field(name = f"**–°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ—Å–ª–µ:**", value = f"{message_after.content}" + "\u200b")
            embed.add_field(name = f'**–ö–∞–Ω–∞–ª:**', value = f'{message_before.channel.mention}')
            embed.set_author(name = f"{message_before.author.name}", icon_url=message_before.author.avatar.url)
            embed.timestamp = datetime.datetime.utcnow()
            embed.set_footer(text=f'{message_before.author.name} \u200b') 
            await channel.send(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

@client.command()
async def python(ctx, *, code = None):
	admins = settings['admins']
	if ctx.author.id in admins:
		if not code == None:
			try:
				exec(str(code))
				embed = discord.Embed(
					title = "–ó–∞–ø—É—Å–∫ –∫–æ–¥–∞",
					description = f"```python> \n{code}```",
					color = 0x31ff2e)
				await ctx.reply(embed = embed)
			except Exception as e:
				embed = discord.Embed(
					title = "–û—à–∏–±–∫–∞ –≤ –∫–æ–¥–µ",
					description = f"```python> \n{str(type(e).__name__)}: {str(e)}```",
					color = 0xff0000)
				await ctx.reply(embed = embed)

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

cogs = [ # –°–ø–∏—Å–æ–∫ cog'–æ–≤.
    #"cogs.entartaiment",
    #"cogs.moderation",
    "cogs.tools"
]

btns=[
    {
        "label": "–î–æ–±–∞–≤–∏—Ç—å –±–æ—Ç–∞",
        "url": f"https://discord.com/oauth2/authorize?client_id={settings['client_id']}&permissions={settings['perm_scope']}&scope=bot%20applications.commands"
    },
    {
        "label": "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±–æ—Ç–∞",
        "url": settings['support_server']
    }
]
try:
    RPC = Presence(f"{settings['client_id']}") # Discord Rich Presence. –ë—É–¥–µ—Ç –≤–∏–¥–Ω–æ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞.
except:
    pass
else:
    try:
        RPC.connect()
    except:
        pass
    else:
        RPC.update(
            state=f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω.",
            details="–†–∞–±–æ—Ç–∞ –Ω–∞–¥ –±–æ—Ç–æ–º.",
            start=dt.time(),
            large_image="mad_cat_default",
            large_text="MadBot - –∑–∞–ø—É—â–µ–Ω",
            buttons=btns
        )

class MyBot(commands.Bot):
    def __init__(self):
        super().__init__(command_prefix='mad.', intents=discord.Intents.all(), application_id=settings['app_id'])

    async def setup_hook(self):
        for ext in cogs:
            try:
                await self.load_extension(ext)
            except:
                print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å {ext}!")
        
        await client.tree.sync()
    
    async def on_connect(self):
        await client.change_presence(status=discord.Status.idle, activity=discord.Game(name="–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞..."))
        print("–°–æ–µ–¥–∏–Ω–µ–Ω–æ! –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è...")

    async def on_ready(self):
        global started_at
        server = client.get_guild(settings['server']) # –°–µ—Ä–≤–µ—Ä –ª–æ–≥–æ–≤.
        logs = server.get_channel(settings['log_channel']) # –ö–∞–Ω–∞–ª –ª–æ–≥–æ–≤.
        channel = client.get_channel(967484036127813713) # –ö–∞–Ω–∞–ª "–æ–±—â–µ–Ω–∏—è" –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞. –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ.
        for guild in client.guilds: # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ —á—ë—Ä–Ω–æ–º —Å–ø–∏—Å–∫–µ.
            if guild.id in blacklist:
                await guild.leave()
                print(f"–ë–æ—Ç –≤—ã—à–µ–ª –∏–∑ {guild.name} ({guild.id})")
        print(f"–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞! {client.user} –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        if round(client.latency, 3)*1000 < 90:
            started_at -= 10800
        embed = discord.Embed(title="–ë–æ—Ç –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!", color=discord.Color.red(), description=f"–ü–∏–Ω–≥: `{int(round(client.latency, 3)*1000)}ms`\n–í–µ—Ä—Å–∏—è: `{settings['curr_version']}`")
        await logs.send(embed=embed)
        await channel.send("OK") # –ö–∞–Ω–∞–ª "–æ–±—â–µ–Ω–∏—è" –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞. –ó–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ.

    async def on_command_error(self, ctx: commands.Context, error: commands.CommandError):
        if isinstance(error, commands.CommandNotFound):
            return
        await ctx.message.add_reaction("‚ùå")
        message = await ctx.message.reply(content=f"```\n{error}```")
        channel = bot.get_channel(settings['log_channel'])
        await channel.send(f'```\nOn message "{ctx.message.content}"\n\n{error}```')
        print(error)
        await sleep(30)
        await message.delete()
        await ctx.message.delete()
    
    async def on_guild_join(self, guild: discord.Guild):
        if guild.id in blacklist or guild.owner.id in blacklist: # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫.
            embed=discord.Embed(title="–í–∞—à —Å–µ—Ä–≤–µ—Ä –ª–∏–±–æ –≤—ã —Å–∞–º–∏ –∑–∞–Ω–µ—Å—ë–Ω(-—ã) –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –±–æ—Ç–∞!", color=discord.Color.red(), description=f"–í–ª–∞–¥–µ–ª–µ—Ü –±–æ—Ç–∞ –∑–∞–Ω—ë—Å –≤–∞—à —Å–µ—Ä–≤–µ—Ä –ª–∏–±–æ –≤–∞—Å –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫! –ë–æ—Ç –ø–æ–∫–∏–Ω–µ—Ç —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä. –ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: {settings['support_invite']}", timestamp=datetime.datetime.utcnow())
            embed.set_thumbnail(url=guild.icon_url)
            try:
                await guild.owner.send(embed=embed)
            except:
                pass
            await guild.leave()
            print(f"–ë–æ—Ç –≤—ã—à–µ–ª –∏–∑ {guild.name} ({guild.id})")
        else: 
            await sleep(1)
            embed = discord.Embed(title=f"–°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ {client.user.name} –Ω–∞ —Å–µ—Ä–≤–µ—Ä {guild.name}", color=discord.Color.orange(), description=f"–ü–µ—Ä–µ–¥ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —Å–ª–µ—à-–∫–æ–º–∞–Ω–¥—ã –≤–∫–ª—é—á–µ–Ω—ã —É –≤–∞—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. –í–∞—à —Å–µ—Ä–≤–µ—Ä: `{len(bot.guilds)}-—ã–π`.")
            embed.add_field(name="–ü–æ–¥–¥–µ—Ä–∂–∫–∞:", value=settings['support_invite'])
            embed.set_thumbnail(url=client.user.avatar.url)
            adder = None
            try:
                async for entry in guild.audit_logs(limit=5, action=discord.AuditLogAction.bot_add):
                    if entry.target.id == client.user.id:
                        adder = entry.user
            except Forbidden:
                adder = guild.owner
                embed.set_footer(text="–ë–æ—Ç –Ω–∞–ø–∏—Å–∞–ª –≤–∞–º, —Ç–∞–∫ –∫–∞–∫ –Ω–µ —Å–º–æ–≥ —É—Ç–æ—á–Ω–∏—Ç—å, –∫—Ç–æ –µ–≥–æ –¥–æ–±–∞–≤–∏–ª.")
            try:
                await adder.send(embed=embed)
            except:
                pass
            embed = discord.Embed(title="–ù–æ–≤—ã–π —Å–µ—Ä–≤–µ—Ä!", color=discord.Color.green())
            embed.add_field(name="–ù–∞–∑–≤–∞–Ω–∏–µ:", value=f"`{guild.name}`")
            embed.add_field(name="–í–ª–∞–¥–µ–ª–µ—Ü:", value=f"{guild.owner.mention}")
            embed.add_field(name="ID —Å–µ—Ä–≤–µ—Ä–∞:", value=f"`{guild.id}`")
            embed.add_field(name="–ö–æ–ª-–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:", value=f"`{guild.member_count}`")
            try:
                embed.set_thumbnail(url=guild.icon.url)
            except:
                pass
            log_channel = client.get_channel(settings['log_channel'])
            await log_channel.send(embed=embed)
            await client.tree.sync()
    

'''bot=MyBot()

@client.tree.error
async def on_error(interaction: discord.Interaction, error):
    if isinstance(error, app_commands.CheckFailure):
        embed = discord.Embed(title="–ö–æ–º–∞–Ω–¥–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∞!", color=discord.Color.red(), description="–í–ª–∞–¥–µ–ª–µ—Ü –±–æ—Ç–∞ –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–∏–ª —ç—Ç—É –∫–æ–º–∞–Ω–¥—É! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ!")
        return await interaction.response.send_message(embed=embed, ephemeral=True) 
    embed = discord.Embed(title="–û—à–∏–±–∫–∞!", color=discord.Color.red(), description=f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞! –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É —Å–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–º –æ—à–∏–±–∫–∏!\n```\n{error}```", timestamp=discord.utils.utcnow())
    channel = client.get_channel(settings['log_channel'])
    await channel.send(f"```\nOn command '{interaction.command.name}'\n{error}```")
    try:
        await interaction.response.send_message(embed=embed, ephemeral=True)
    except discord.errors.InteractionResponded:
        await interaction.edit_original_message(embeds=[embed])
    print(error)'''

'''@client.command()
async def debug(ctx, argument, *, arg1 = None):
    if ctx.author.id == settings['owner_id']:
        if argument == "help":
            message = await ctx.send(f"```\nservers - —Å–ø–∏—Å–æ–∫ —Å–µ—Ä–≤–µ—Ä–æ–≤ –±–æ—Ç–∞\nserverid [ID] - —É–∑–Ω–∞—Ç—å –æ —Å–µ—Ä–≤–µ—Ä–µ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –µ–≥–æ ID\nservername [NAME] - —É–∑–Ω–∞—Ç—å –æ —Å–µ—Ä–≤–µ—Ä–µ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é\ncreateinvite [ID] - —Å–æ–∑–¥–∞—Ç—å –∏–Ω–≤–∞–π—Ç –Ω–∞ —Å–µ—Ä–≤–µ—Ä\naddblacklist [ID] - –¥–æ–±–∞–≤–∏—Ç—å –≤ –ß–°\nremoveblacklist [ID] - —É–±—Ä–∞—Ç—å –∏–∑ –ß–°\nverify [ID] - –≤—ã–¥–∞—Ç—å –≥–∞–ª–æ—á–∫—É\nsupport [ID] - –¥–∞—Ç—å –∑–Ω–∞—á–æ–∫ —Å–∞–ø–ø–æ—Ä—Ç–∞\nblacklist - —Å–ø–∏—Å–æ–∫ –ß–°–Ω–∏–∫–æ–≤\nleaveserver [ID] - –ø–æ–∫–∏–Ω—É—Ç—å —Å–µ—Ä–≤–µ—Ä\nsync - —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∫–æ–º–∞–Ω–¥ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è\nchangename [NAME] - –ø–æ–º–µ–Ω—è—Ç—å –Ω–∏–∫ –±–æ—Ç–∞\nstarttyping [SEC] - –Ω–∞—á–∞—Ç—å –ø–µ—á–∞—Ç–∞—Ç—å\nsetavatar [AVA] - –ø–æ–º–µ–Ω—è—Ç—å –∞–≤–∞—Ç–∞—Ä\nrestart - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞\ncreatetemplate - Ctrl+C Ctrl+V —Å–µ—Ä–≤–µ—Ä\noffcmd - –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã\noncmd - –≤–∫–ª—é—á–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã\nreloadcogs - –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ cog'–æ–≤\nloadcog - –∑–∞–≥—Ä—É–∑–∫–∞ cog'–∞\nunloadcog - –≤—ã–≥—Ä—É–∑–∫–∞ cog'a```")
            await message.delete(delay=60)
        if argument == "servers":
            servernames = []
            gnames = " "
            for guild in client.guilds:
                servernames.append(guild.name)
            for name in servernames:
                gnames += f"`{name}`, "
            await ctx.send(f"Servers: {gnames}", delete_after=120)
        if argument == "serverid":
            try:
                guild = await client.fetch_guild(int(arg1))
            except NotFound:
                await ctx.message.add_reaction("‚ùå")
                await sleep(30)
            await ctx.send(f"Name: {guild.name}, owner: {guild.owner.mention}, ID: {guild.id}", delete_after=120)
        if argument == "servername":
            for guild in client.guilds:
                if str(arg1) == guild.name:
                    await ctx.send(f"Name: {guild.name}, owner: {guild.owner.mention}, ID: {guild.id}", delete_after=120)
        if argument == "createinvite":
            for guild in client.guilds:
                if guild.id == int(arg1):
                    for channel in guild.text_channels:
                        invite = await channel.create_invite(max_age=30, reason="–ó–∞–ø—Ä–æ—Å")
                        await ctx.send(invite.url, delete_after=30)
                        return await ctx.message.delete()
        if argument == "addblacklist":
            blacklist.append(int(arg1))
            guild = client.get_guild(int(arg1))
            if guild != None:
                embed=discord.Embed(title="–í–∞—à —Å–µ—Ä–≤–µ—Ä –∑–∞–Ω–µ—Å—ë–Ω –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ –±–æ—Ç–∞!", color=discord.Color.red(), description=f"–í–ª–∞–¥–µ–ª–µ—Ü –±–æ—Ç–∞ –∑–∞–Ω—ë—Å –≤–∞—à —Å–µ—Ä–≤–µ—Ä –≤ —á—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫! –ë–æ—Ç –ø–æ–∫–∏–Ω–µ—Ç —ç—Ç–æ—Ç —Å–µ—Ä–≤–µ—Ä. –ï—Å–ª–∏ –≤—ã —Å—á–∏—Ç–∞–µ—Ç–µ, —á—Ç–æ —ç—Ç–æ –æ—à–∏–±–∫–∞: –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É: {settings['support_invite']}", timestamp=datetime.datetime.utcnow())
                embed.set_thumbnail(url=guild.icon_url)
                blacklist.append(guild.owner.id)
                try:
                    await guild.owner.send(embed=embed)
                except:
                    pass
                await guild.leave()
            await ctx.message.add_reaction("‚úÖ")
            await sleep(30)
            if int(arg1) == settings['owner_id']:
                blacklist.remove(int(arg1))
        if argument == "verify":
            verified.append(int(arg1))
            await ctx.message.add_reaction("‚úÖ")
            await sleep(30)
        if argument == "support":
            supports.append(int(arg1))
            await ctx.message.add_reaction("‚úÖ")
            await sleep(30)
        if argument == "blacklist":
            await ctx.send(f"Banned: {blacklist}", delete_after=60)
        if argument == "removeblacklist":
            try:
                blacklist.remove(int(arg1))
            except ValueError:
                await ctx.message.add_reaction("‚ùå")
            else:
                await ctx.message.add_reaction("‚úÖ")
            await sleep(30)
        if argument == "leaveserver":
            guild = client.get_guild(int(arg1))
            await guild.leave()
            await ctx.message.add_reaction("‚úÖ")
            await sleep(30)
        if argument == "sync":
            async with ctx.channel.typing():    
                await client.tree.sync()
                await ctx.message.add_reaction("‚úÖ")
            await sleep(30)
        if argument == "changename":
            await client.user.edit(username=arg1)
            await ctx.message.add_reaction("‚úÖ")
            await sleep(30)
        if argument == "starttyping":
            await ctx.message.delete()
            async with ctx.channel.typing():
                await sleep(int(arg1))
        if argument == "createtemplate":
            try:
                template = await ctx.guild.create_template(name="–ü–æ–≤i—Å—Ç–∫–∞")
            except:
                template = ctx.guild.templates
                for templ in template:
                    template = templ
                    break
            owner = ctx.guild.get_member(settings['owner_id'])
            await owner.send(template.url)
        if argument == "restart":
            await ctx.message.add_reaction("üîÅ")
            await client.change_presence(status=discord.Status.idle, activity=discord.Game(name="–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞..."))
            await sleep(2)
            os.execv(sys.executable, ['python'] + sys.argv)
        if argument == "setavatar":
            bot_avatar = None
            for attachment in ctx.message.attachments:
                bot_avatar = await attachment.read()
            await client.user.edit(avatar=bot_avatar)
            await ctx.message.add_reaction("‚úÖ")
            await sleep(30)
        if argument == "stop":
            await ctx.message.add_reaction("üîÅ")
            await client.close()
        if argument == "offcmd":
            shutted_down.append(arg1)
            await ctx.message.add_reaction("‚úÖ")
            await sleep(30)
        if argument == "oncmd":
            shutted_down.remove(arg1)
            await ctx.message.add_reaction("‚úÖ")
            await sleep(30)
        if argument == "reloadcogs":
            for ext in cogs:
                try:
                    await client.reload_extension(ext)
                except:
                    print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å {ext}!")
            await ctx.message.add_reaction("‚úÖ")
            await sleep(30)
        if argument == "loadcog":
            try:
                await client.load_extension(f'cogs.{arg1}')
            except:
                await ctx.message.add_reaction("‚ùå")
            else:
                await ctx.message.add_reaction("‚úÖ")
                await client.tree.sync()
            await sleep(30)
        if argument == "unloadcog":
            try:
                await client.unload_extension(f"cogs.{arg1}")
            except:
                await ctx.message.add_reaction("‚ùå")
            else:
                await ctx.message.add_reaction("‚úÖ")
                await client.tree.sync()
            await sleep(30)
    await ctx.message.delete()'''


#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

#-------------------------------------------------------------------------------------------------------------
#-------------------------------------------------------------------------------------------------------------

if __name__ == "__main__":
    print("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Discord...")
    client.run(os.getenv('token'))
